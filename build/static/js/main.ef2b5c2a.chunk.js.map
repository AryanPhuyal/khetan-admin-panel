{"version":3,"sources":["containers/Layout/topbar/TopbarSidebarButton.jsx","containers/Layout/topbar/TopbarMenuLink.jsx","containers/Layout/topbar/TopbarProfile.jsx","containers/Layout/topbar/Topbar.jsx","containers/Layout/sidebar/SidebarLink.jsx","containers/Layout/sidebar/SidebarCategory.jsx","containers/Layout/sidebar/SidebarContent.jsx","shared/prop-types/ReducerProps.js","containers/Layout/sidebar/Sidebar.jsx","redux/actions/themeActions.js","redux/actions/sidebarActions.js","containers/Layout/index.jsx","containers/App/MainWrapper.jsx","shared/components/form/CheckBox.jsx","containers/LogIn/components/validation.js","component/imput/input.jsx","utility/api.js","redux/actions/profile.js","containers/LogIn/components/LogInForm.jsx","containers/LogIn/index.jsx","shared/tables/ReactTableHeader.jsx","shared/tables/ReactTableDnDBody.jsx","shared/tables/ReactTableBody.jsx","shared/tables/ReactTableFooter.jsx","shared/tables/ReactTableFilter.jsx","shared/tables/ReactTablePagination.jsx","shared/tables/ReactTableConstructor.jsx","shared/tables/ReactTableCell.jsx","shared/tables/ReactTableEditableCell.jsx","shared/tables/ReactTableBase.jsx","component/table/tableBase.jsx","component/alert/statusFormater.js","component/alert/actionFormaterProduct.js","utility/request.js","redux/actions/product.js","screens/products/component/createData.jsx","screens/products/products.jsx","screens/category/component/createData.jsx","redux/actions/category.js","screens/category/categories.jsx","shared/form/DropZone.jsx","screens/category/component/addMainCategory.jsx","screens/category/component/addSubCategory.jsx","screens/category/component/addChildCategory.js","screens/category/addCategory.jsx","screens/orders/component/createData.jsx","redux/actions/order.js","screens/orders/orders.jsx","screens/vendors/component/createData.jsx","redux/actions/vendors.js","screens/vendors/Vendors.jsx","shared/form/DropZoneMultiple.jsx","shared/form/Select.jsx","screens/addProduct/components/ProductEditForm.jsx","screens/addProduct/components/ProductEditCard.jsx","screens/addProduct/index.jsx","screens/users/component/createData.jsx","redux/actions/users.js","screens/users/users.jsx","screens/enquary/component/createData.jsx","redux/actions/enquary.js","screens/enquary/Enquary.jsx","screens/logout/logout.js","containers/App/Router.jsx","redux/reducers/themeReducer.js","redux/reducers/sidebarReducer.js","redux/actions/rtlActions.js","redux/reducers/rtlReducer.js","redux/reducers/helper.js","redux/reducers/profile.js","redux/reducers/category.js","redux/reducers/product.js","redux/reducers/order.js","redux/reducers/vendors.js","redux/reducers/users.js","redux/reducers/enquary.js","containers/App/store.js","containers/App/ScrollToTop.jsx","shared/Alert/Alert.jsx","component/alert/alert.js","containers/App/App.jsx","serviceWorker.js","index.js"],"names":["icon","process","TopbarSidebarButton","changeMobileSidebarVisibility","changeSidebarVisibility","type","className","onClick","src","alt","TopbarMenuLinks","title","path","to","Ava","TopbarProfile","username","useSelector","state","user","useState","isCollapsed","setIsCollapsed","aria-label","Collapse","isOpen","TopbarMenuLink","Topbar","SidebarLink","newLink","route","activeClassName","Badge","defaultProps","SidebarCategory","isNew","children","categoryClass","classNames","SidebarContent","changeToDark","changeToLight","handleHideSidebar","string","PropTypes","shape","Sidebar","show","bool","collapse","direction","sidebar","sidebarClass","changeThemeToDark","createAction","changeThemeToLight","withRouter","connect","dispatch","layoutClass","layout","mobileSidebarVisibility","theme","rtl","location","pathname","dir","CheckBoxField","disabled","name","value","onChange","label","color","CheckboxClass","htmlFor","id","checked","style","background","borderColor","renderCheckBoxField","input","defaultChecked","other","validate","values","errors","email","test","url","password","length","select","Input","placeholder","meta","touched","error","baseUrl","baseUrlApi","loginUrl","categoriesUrl","productListUrl","listOrderUrl","listVendorApi","listUsersApi","listEnquaryList","LOGIN","LOGOUT","login","a","axios","post","loginSuccess","data","payload","reduxForm","form","handleSubmit","isPasswordShown","setIsPasswordShown","loading","setloading","seterror","useDispatch","onSubmit","response","success","token","message","noValidate","Field","component","inputField","href","Button","LogIn","Header","column","isSortable","render","canSort","Sorting","undefined","isSortedDesc","ReactTableHeader","headerGroups","isResizable","headerPropsSortable","props","getSortByToggleProps","headerPropsResize","getResizerProps","justifyContent","alignItems","display","getStylesResizable","align","map","headerGroup","getHeaderGroupProps","headers","getHeaderProps","isResizing","getItemStyle","draggableStyle","cursor","zIndex","getListStyle","ReactTableDnDBody","page","getTableBodyProps","prepareRow","updateDraggableData","onDragEnd","result","destination","droppableId","provided","ref","innerRef","droppableProps","val","draggableId","index","Number","provide","draggableProps","dragHandleProps","getRowProps","cells","cell","getCellProps","ReactTableDefaultBody","row","withDragAndDrop","ReactTableFooter","footerGroups","group","getFooterGroupProps","getFooterProps","ReactTableFilter","rows","setGlobalFilter","setFilterValue","globalFilter","dataLength","setValue","useAsyncDebounce","item","e","target","ReactTablePagination","gotoPage","canPreviousPage","pageOptions","pageSize","pageIndex","previousPage","nextPage","canNextPage","setPageSize","manualPageSize","arrayPageIndex","slice","Pagination","PaginationLink","i","PaginationItem","active","FormGroup","event","ReactTableConstructor","tableConfig","tableOptions","tableOptionalHook","isEditable","withPagination","withSearchEngine","useTable","useGlobalFilter","useSortBy","usePagination","useResizeColumns","useRowSelect","getTableProps","pageCount","updateEditableData","columns","defaultColumn","disableSortBy","manualSortBy","manualGlobalFilter","manualPagination","ReactTableCell","initialValue","disableGlobalFilter","searchWords","autoEscape","textToHighlight","EditableCell","isActiveInput","setIsActiveInput","updateData","useEffect","onDoubleClick","onBlur","onKeyPress","key","ReactTableBase","filterValue","autoResetPage","initialState","useFlexLayout","Cell","ReactTableCellEditable","accessor","first","last","DataReactTable","reactTableData","tableRowsData","setData","Col","md","lg","Card","CardBody","tableHeaderData","rowIndex","columnId","old","items","startIndex","endIndex","Array","from","splice","removed","reorder","source","StatusFormatter","ActionFormatter","onclick","link","stat","authGet","api","get","Authorization","FETCH_PRODUCT_START","FETCH_PRODUCT_SUCCESS","FETCH_PRODUCT_FAIL","SUSPEND_PRODUCT","APPROVE_PRODUCT","fetchProductFail","err","approveProduct","productId","CreateTableData","setactionChange","products","product","unSuspend","produId","prodId","suspend","useMemo","width","formatter","forEach","push","image","gallery","height","sku","stock","price","vendor","status","action","ActionFormater","_id","find","discount","updatedAt","moment","format","createdAt","Product","listProduct","toString","fetchProdut","Container","Row","categories","category","slug","f","mainCategory","childcategory","subCategory","LIST_CATEGORY_SUCCESS","LIST_CATEGORY_FAIL","LIST_CATEGORY_START","fetchCategoryFail","fetchCategory","Categories","listCategory","DropZoneField","customHeight","files","overflow","accept","multiple","onDrop","fileToUpload","fl","Object","assign","preview","URL","createObjectURL","getRootProps","getInputProps","isArray","preventDefault","filter","removeFile","renderDropZoneField","reset","ButtonToolbar","x","console","log","AddCategorie","orders","order","postalcode","shippingAddress","postalCode","address","totalItems","totalProducts","totalQuantity","totalCost","orderDate","orderedData","FETCH_ORDER_SATRT","FETCH_ORDER_SUCCESS","FETCH_ORDER_FAIL","fethcOrderFail","Orders","listOrder","fetchOrder","vendors","profileDetails","phone","productCount","FETCH_VENDOR_START","FETCH_VENDOR_SUCCESS","FETCH_VENDOR_FAIL","fetchVendorFail","Vendors","listVendor","fetchVendor","DropZoneMultipleField","filesToUpload","onDropFiles","concat","file","backgroundImage","renderDropZoneMultipleField","SelectField","options","selectedOption","clearable","classNamePrefix","renderSelectField","PaymentCard","ProductEdit","ProductEditCard","users","firstname","profilePicture","lastname","accountStatus","LIST_USERS_START","LIST_USERS_SUCCESS","LIST_USERS_FAIL","listUserFail","Users","listUsers","fetchUsers","enquaries","enquary","contact","productDescription","enquiry","imageLink","ENQUARY_LIST_START","ENQUARY_LIST_SUCCESS","ENQUARY_LIST_FAIL","enquaryListFail","Enquary","enquaryList","fetchEnquaryList","Logout","Pages","wrappedRoutes","Products","AddProduct","AddCategory","Router","loggedIn","exact","handleActions","changeDirectionToLTR","changeDirectionToRTL","updateObject","newobj","init","JSON","parse","localStorage","getItem","reducer","setItem","stringify","removeItem","addCategory","listCategorySuccess","newCategory","newProducts","newProduct","combineReducers","reduxFormReducer","themeReducer","sidebarReducer","rtlReducer","profileReducer","categoryReducer","productReducer","orderReducer","vendorReducer","usersReducer","enquaryReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ScrollToTop","scrollTo","propTypes","isRequired","element","AlertComponent","Icon","visible","setVisible","Alert","App","isLoading","setIsLoading","isLoaded","setIsLoaded","addEventListener","setTimeout","template","alert","fill","d","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.ef2b5c2a.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst icon = `${process.env.PUBLIC_URL}/img/burger.svg`;\n\nconst TopbarSidebarButton = ({\n  changeMobileSidebarVisibility,\n  changeSidebarVisibility,\n}) => (\n  <div>\n    <button\n      type=\"button\"\n      className=\"topbar__button topbar__button--desktop\"\n      onClick={changeSidebarVisibility}\n    >\n      <img src={icon} alt=\"\" className=\"topbar__button-icon\" />\n    </button>\n    <button\n      type=\"button\"\n      className=\"topbar__button topbar__button--mobile\"\n      onClick={changeMobileSidebarVisibility}\n    >\n      <img src={icon} alt=\"\" className=\"topbar__button-icon\" />\n    </button>\n  </div>\n);\n\nTopbarSidebarButton.propTypes = {\n  changeMobileSidebarVisibility: PropTypes.func.isRequired,\n  changeSidebarVisibility: PropTypes.func.isRequired,\n};\n\nexport default TopbarSidebarButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst TopbarMenuLinks = ({ title, icon, path }) => (\n  <Link className=\"topbar__link\" to={path}>\n    <span className={`topbar__link-icon lnr lnr-${icon}`} />\n    <p className=\"topbar__link-title\">{title}</p>\n  </Link>\n);\n\nTopbarMenuLinks.propTypes = {\n  title: PropTypes.string.isRequired,\n  icon: PropTypes.string.isRequired,\n  path: PropTypes.string.isRequired,\n};\n\nexport default TopbarMenuLinks;\n","import React, { useState } from \"react\";\nimport DownIcon from \"mdi-react/ChevronDownIcon\";\nimport { Collapse } from \"reactstrap\";\nimport TopbarMenuLink from \"./TopbarMenuLink\";\nimport { useSelector } from \"react-redux\";\n\nconst Ava = `${process.env.PUBLIC_URL}/img/ava.png`;\n\nconst TopbarProfile = () => {\n  const {\n    user: { username },\n  } = useSelector((state) => state.user);\n  const [isCollapsed, setIsCollapsed] = useState(false);\n  const handleToggleCollapse = () => {\n    setIsCollapsed(!isCollapsed);\n  };\n\n  return (\n    <div className=\"topbar__profile\">\n      <button type=\"button\" className=\"topbar__avatar\" onClick={setIsCollapsed}>\n        <img className=\"topbar__avatar-img\" src={Ava} alt=\"avatar\" />\n        <p className=\"topbar__avatar-name\">{username}</p>\n        <DownIcon className=\"topbar__icon\" />\n      </button>\n      {isCollapsed && (\n        <button\n          type=\"button\"\n          aria-label=\"button collapse\"\n          className=\"topbar__back\"\n          onClick={handleToggleCollapse}\n        />\n      )}\n      <Collapse isOpen={isCollapsed} className=\"topbar__menu-wrap\">\n        <div className=\"topbar__menu\">\n          {/* <TopbarMenuLink title=\"Page one\" icon=\"list\" path=\"/pages/one\" /> */}\n          <TopbarMenuLink title=\"Settings\" icon=\"inbox\" path=\"/pages/two\" />\n          <div className=\"topbar__menu-divider\" />\n          <TopbarMenuLink title=\"Log Out\" icon=\"exit\" path=\"/logout\" />\n        </div>\n      </Collapse>\n    </div>\n  );\n};\n\nexport default TopbarProfile;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport TopbarSidebarButton from \"./TopbarSidebarButton\";\nimport TopbarProfile from \"./TopbarProfile\";\n\nconst Topbar = ({ changeMobileSidebarVisibility, changeSidebarVisibility }) => (\n  <div className=\"topbar\">\n    <div className=\"topbar__wrapper\">\n      <div className=\"topbar__left\">\n        <TopbarSidebarButton\n          changeMobileSidebarVisibility={changeMobileSidebarVisibility}\n          changeSidebarVisibility={changeSidebarVisibility}\n        />\n        <Link className=\"topbar__logo\" to=\"/\">\n          {\" \"}\n          Travel Rights\n        </Link>\n      </div>\n      <div className=\"topbar__right\">\n        <TopbarProfile />\n      </div>\n    </div>\n  </div>\n);\n\nTopbar.propTypes = {\n  changeMobileSidebarVisibility: PropTypes.func.isRequired,\n  changeSidebarVisibility: PropTypes.func.isRequired,\n};\n\nexport default Topbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Badge } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nconst SidebarLink = ({\n  title, icon, newLink, route, onClick,\n}) => (\n  <NavLink\n    to={route}\n    onClick={onClick}\n    activeClassName=\"sidebar__link-active\"\n  >\n    <li className=\"sidebar__link\">\n      {icon ? <span className={`sidebar__link-icon lnr lnr-${icon}`} /> : ''}\n      <p className=\"sidebar__link-title\">\n        {title}\n        {newLink ? <Badge className=\"sidebar__link-badge\"><span>New</span></Badge> : ''}\n      </p>\n    </li>\n  </NavLink>\n);\n\nSidebarLink.propTypes = {\n  title: PropTypes.string.isRequired,\n  icon: PropTypes.string,\n  newLink: PropTypes.bool,\n  route: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nSidebarLink.defaultProps = {\n  icon: '',\n  newLink: false,\n  route: '/',\n  onClick: () => {},\n};\n\nexport default SidebarLink;\n","import React, { useState } from 'react';\nimport { Collapse } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst SidebarCategory = ({\n  title, icon, isNew, children,\n}) => {\n  const [isCollapsed, setIsCollapsed] = useState(false);\n  const categoryClass = classNames({\n    'sidebar__category-wrap': true,\n    'sidebar__category-wrap--open': isCollapsed,\n  });\n\n  const handleToggleCollapse = () => {\n    setIsCollapsed(!isCollapsed);\n  };\n\n  return (\n    <div className={categoryClass}>\n      <button type=\"button\" className=\"sidebar__link sidebar__category\" onClick={handleToggleCollapse}>\n        {icon ? <span className={`sidebar__link-icon lnr lnr-${icon}`} /> : ''}\n        <p className=\"sidebar__link-title\">{title}\n          {isNew && <span className=\"sidebar__category-new\" />}\n        </p>\n        <span className=\"sidebar__category-icon lnr lnr-chevron-right\" />\n      </button>\n      <Collapse isOpen={isCollapsed} className=\"sidebar__submenu-wrap\">\n        <ul className=\"sidebar__submenu\">\n          <div>\n            {children}\n          </div>\n        </ul>\n      </Collapse>\n    </div>\n  );\n};\n\nSidebarCategory.propTypes = {\n  title: PropTypes.string.isRequired,\n  icon: PropTypes.string,\n  isNew: PropTypes.bool,\n  children: PropTypes.arrayOf(PropTypes.element).isRequired,\n};\n\nSidebarCategory.defaultProps = {\n  icon: '',\n  isNew: false,\n};\n\nexport default SidebarCategory;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SidebarLink from \"./SidebarLink\";\nimport SidebarCategory from \"./SidebarCategory\";\n\nconst SidebarContent = ({ onClick, changeToDark, changeToLight }) => {\n  const handleHideSidebar = () => {\n    onClick();\n  };\n\n  return (\n    <div className=\"sidebar__content\">\n      <SidebarLink title=\"Dashboard\" route=\"/\" onClick={handleHideSidebar} />\n      <SidebarCategory title=\"Category\" icon=\"category\">\n        <SidebarLink\n          title=\"List Categories\"\n          route=\"/categories/list\"\n          onClick={handleHideSidebar}\n        />\n        <SidebarLink\n          title=\"Add Category\"\n          route=\"/categories/add\"\n          onClick={handleHideSidebar}\n        />\n      </SidebarCategory>\n\n      <SidebarCategory title=\"Product\" icon=\"product\">\n        <SidebarLink\n          title=\"List product\"\n          route=\"/products/list\"\n          onClick={handleHideSidebar}\n        />\n        <SidebarLink\n          title=\"Add Product\"\n          route=\"/products/add\"\n          onClick={handleHideSidebar}\n        />\n      </SidebarCategory>\n      <SidebarLink title=\"Orders\" route=\"/orders\" onClick={handleHideSidebar} />\n      <ul className=\"sidebar__block\">\n        <SidebarCategory title=\"Vendor\" icon=\"product\">\n          <SidebarLink\n            title=\"List Vendor\"\n            route=\"/vendors/list\"\n            onClick={handleHideSidebar}\n          />\n          {/* <SidebarLink\n          title=\"Add Product\"\n          route=\"/products/add\"\n          onClick={handleHideSidebar}\n        /> */}\n        </SidebarCategory>\n\n        <SidebarLink\n          title=\"User List\"\n          icon=\"user\"\n          route=\"/users/list\"\n          onClick={handleHideSidebar}\n        />\n        <SidebarLink\n          title=\"Enquary List\"\n          icon=\"exit\"\n          route=\"/enquary/list\"\n          onClick={handleHideSidebar}\n        />\n        {/* <SidebarLink\n          title=\"Log In\"\n          icon=\"exit\"\n          route=\"/log_in\"\n          onClick={handleHideSidebar}\n        /> */}\n        <SidebarCategory title=\"Layout\" icon=\"layers\">\n          <button\n            type=\"button\"\n            className=\"sidebar__link\"\n            onClick={changeToLight}\n          >\n            <p className=\"sidebar__link-title\">Light Theme</p>\n          </button>\n          <button\n            type=\"button\"\n            className=\"sidebar__link\"\n            onClick={changeToDark}\n          >\n            <p className=\"sidebar__link-title\">Dark Theme</p>\n          </button>\n        </SidebarCategory>\n      </ul>\n    </div>\n  );\n};\n\nSidebarContent.propTypes = {\n  changeToDark: PropTypes.func.isRequired,\n  changeToLight: PropTypes.func.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default SidebarContent;\n","import PropTypes from 'prop-types';\n\nconst {\n  string, shape,\n} = PropTypes;\n\nexport const SidebarProps = shape({\n  show: PropTypes.bool,\n  collapse: PropTypes.bool,\n});\n\nexport const ThemeProps = shape({\n  className: string,\n});\n\nexport const RTLProps = shape({\n  direction: string,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Scrollbar from 'react-smooth-scrollbar';\nimport classNames from 'classnames';\nimport SidebarContent from './SidebarContent';\nimport { SidebarProps } from '../../../shared/prop-types/ReducerProps';\n\nconst Sidebar = ({\n  changeToDark, changeToLight, changeMobileSidebarVisibility, sidebar,\n}) => {\n  const sidebarClass = classNames({\n    sidebar: true,\n    'sidebar--show': sidebar.show,\n    'sidebar--collapse': sidebar.collapse,\n  });\n\n  return (\n    <div className={sidebarClass}>\n      <button\n        type=\"button\"\n        aria-label=\"sidebar visibility\"\n        className=\"sidebar__back\"\n        onClick={changeMobileSidebarVisibility}\n      />\n      <Scrollbar className=\"sidebar__scroll scroll\">\n        <div className=\"sidebar__wrapper sidebar__wrapper--desktop\">\n          <SidebarContent\n            onClick={() => {}}\n            changeToDark={changeToDark}\n            changeToLight={changeToLight}\n          />\n        </div>\n        <div className=\"sidebar__wrapper sidebar__wrapper--mobile\">\n          <SidebarContent\n            onClick={changeMobileSidebarVisibility}\n            changeToDark={changeToDark}\n            changeToLight={changeToLight}\n          />\n        </div>\n      </Scrollbar>\n    </div>\n  );\n};\n\nSidebar.propTypes = {\n  sidebar: SidebarProps.isRequired,\n  changeToDark: PropTypes.func.isRequired,\n  changeToLight: PropTypes.func.isRequired,\n  changeMobileSidebarVisibility: PropTypes.func.isRequired,\n};\n\nexport default Sidebar;\n","import { createAction } from 'redux-actions';\n\nexport const changeThemeToDark = createAction('CHANGE_THEME_TO_DARK');\nexport const changeThemeToLight = createAction('CHANGE_THEME_TO_LIGHT');\n","import { createAction } from 'redux-actions';\n\nexport const changeSidebarVisibility = createAction('CHANGE_SIDEBAR_VISIBILITY');\nexport const changeMobileSidebarVisibility = createAction('CHANGE_MOBILE_SIDEBAR_VISIBILITY');\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport Topbar from './topbar/Topbar';\nimport Sidebar from './sidebar/Sidebar';\nimport { changeThemeToDark, changeThemeToLight } from '../../redux/actions/themeActions';\nimport { changeMobileSidebarVisibility, changeSidebarVisibility } from '../../redux/actions/sidebarActions';\nimport { SidebarProps } from '../../shared/prop-types/ReducerProps';\n\nconst Layout = ({ dispatch, sidebar }) => {\n  const layoutClass = classNames({\n    layout: true,\n    'layout--collapse': sidebar.collapse,\n  });\n\n  const sidebarVisibility = () => {\n    dispatch(changeSidebarVisibility());\n  };\n\n  const mobileSidebarVisibility = () => {\n    dispatch(changeMobileSidebarVisibility());\n  };\n\n  const changeToDark = () => {\n    dispatch(changeThemeToDark());\n  };\n\n  const changeToLight = () => {\n    dispatch(changeThemeToLight());\n  };\n\n  return (\n    <div className={layoutClass}>\n      <Topbar\n        changeMobileSidebarVisibility={mobileSidebarVisibility}\n        changeSidebarVisibility={sidebarVisibility}\n      />\n      <Sidebar\n        sidebar={sidebar}\n        changeToDark={changeToDark}\n        changeToLight={changeToLight}\n        changeMobileSidebarVisibility={mobileSidebarVisibility}\n      />\n    </div>\n  );\n};\n\nLayout.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  sidebar: SidebarProps.isRequired,\n};\n\nexport default withRouter(connect((state) => ({\n  sidebar: state.sidebar,\n}))(Layout));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { ThemeProps, RTLProps } from '../../shared/prop-types/ReducerProps';\n\nconst MainWrapper = ({\n  theme, children, rtl, location,\n}) => {\n  const direction = location.pathname === '/' ? 'ltr' : rtl.direction;\n\n  return (\n    <div className={`${theme.className} ${direction}-support`} dir={direction}>\n      <div className=\"wrapper\">\n        {children}\n      </div>\n    </div>\n  );\n};\n\nMainWrapper.propTypes = {\n  theme: ThemeProps.isRequired,\n  rtl: RTLProps.isRequired,\n  children: PropTypes.element.isRequired,\n  location: PropTypes.shape().isRequired,\n};\n\nexport default withRouter(connect((state) => ({\n  theme: state.theme,\n  rtl: state.rtl,\n}))(MainWrapper));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckIcon from 'mdi-react/CheckIcon';\nimport CloseIcon from 'mdi-react/CloseIcon';\n\nconst CheckBoxField = ({\n  disabled, className, name, value, onChange, label, color,\n}) => {\n  const CheckboxClass = classNames({\n    'checkbox-btn': true,\n    disabled,\n  });\n\n  const changeHandler = () => {\n    onChange();\n  };\n\n  return (\n    <label\n      className={`${CheckboxClass} ${className ? ` checkbox-btn--${className}` : ''}`}\n      htmlFor={name}\n    >\n      <input\n        className=\"checkbox-btn__checkbox\"\n        type=\"checkbox\"\n        id={name}\n        name={name}\n        onChange={changeHandler}\n        checked={value}\n        disabled={disabled}\n      />\n      <span\n        className=\"checkbox-btn__checkbox-custom\"\n        style={color ? { background: color, borderColor: color } : {}}\n      >\n        <CheckIcon />\n      </span>\n      {className === 'button'\n        ? (\n          <span className=\"checkbox-btn__label-svg\">\n            <CheckIcon className=\"checkbox-btn__label-check\" />\n            <CloseIcon className=\"checkbox-btn__label-uncheck\" />\n          </span>\n        ) : ''}\n      <span className=\"checkbox-btn__label\">\n        {label}\n      </span>\n    </label>\n  );\n};\n\nCheckBoxField.propTypes = {\n  onChange: PropTypes.func,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.bool,\n  ]).isRequired,\n  label: PropTypes.string,\n  disabled: PropTypes.bool,\n  className: PropTypes.string,\n  color: PropTypes.string,\n};\n\nCheckBoxField.defaultProps = {\n  onChange: () => {},\n  label: '',\n  disabled: false,\n  className: '',\n  color: '',\n};\n\nconst renderCheckBoxField = ({\n  input,\n  label,\n  defaultChecked,\n  disabled,\n  className,\n  color,\n  ...other\n}) => (\n  <CheckBoxField\n    input={input}\n    label={label}\n    defaultChecked={defaultChecked}\n    disabled={disabled}\n    className={className}\n    color={color}\n    {...other}\n  />\n);\n\nrenderCheckBoxField.propTypes = {\n  input: PropTypes.shape({\n    onChange: PropTypes.func,\n    name: PropTypes.string,\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.bool,\n    ]),\n  }).isRequired,\n  label: PropTypes.string,\n  defaultChecked: PropTypes.bool,\n  disabled: PropTypes.bool,\n  className: PropTypes.string,\n  color: PropTypes.string,\n};\n\nrenderCheckBoxField.defaultProps = {\n  label: '',\n  defaultChecked: false,\n  disabled: false,\n  className: '',\n  color: '',\n};\n\nexport default renderCheckBoxField;\n","/* eslint-disable */\nconst validate = (values) => {\n  const errors = {};\n  if (!values.name) {\n    errors.name = \"Username field shouldn’t be empty\";\n  }\n  if (!values.email) {\n    errors.email = \"Email field shouldn’t be empty\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n  if (!values.url) {\n    errors.url = \"Url field shouldn’t be empty\";\n  } else if (\n    !/^(https?:\\/\\/)?((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|((\\d{1,3}\\.){3}\\d{1,3}))(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*(\\?[;&a-z\\d%_.~+=-]*)?(\\#[-a-z\\d_]*)?$/i.test(\n      values.url\n    )\n  ) {\n    errors.url = \"Invalid url\";\n  }\n  if (!values.password) {\n    errors.password = \"Password field shouldn’t be empty\";\n  } else if (values.password.length < 3) {\n    errors.password = \"The password should be greater than 4\";\n  }\n  if (!values.select) {\n    errors.select = \"Please select the option\";\n  }\n\n  return errors;\n};\n\nexport default validate;\n","const Input = ({ input, placeholder, type, meta: { touched, error } }) => (\n  <div className=\"form__form-group-input-wrap\">\n    <input {...input} placeholder={placeholder} type={type} />\n    {touched && error && (\n      <span className=\"form__form-group-error\">{error}</span>\n    )}\n  </div>\n);\n\nexport default Input;\n","export const baseUrl = \"https://haatbazaar.herokuapp.com\";\nexport const baseUrlApi = `${baseUrl}/api/v1`;\n\nexport const loginUrl = `${baseUrlApi}/admin/auth/signin`;\nexport const categoriesUrl = `${baseUrlApi}/admin/category/main/list`;\nexport const productListUrl = `${baseUrlApi}/admin/product/list`;\nexport const listOrderUrl = `${baseUrlApi}/admin/order/list`;\nexport const listVendorApi = `${baseUrlApi}/admin/vendor/list`;\nexport const listUsersApi = `${baseUrlApi}/admin/user/list`;\nexport const suspendProductApi = (prodId) =>\n  `${baseUrlApi}/admin/product/${prodId}/suspend`;\nexport const approveProductApi = (prodId) =>\n  `${baseUrlApi}/admin/product/${prodId}/approve`;\nexport const listEnquaryList = `${baseUrlApi}/admin/product-enquiry/list`;\n","import { loginUrl } from \"../../utility/api\";\nimport axios from \"axios\";\n\nexport const LOGIN = \"LOGIN\";\nexport const LOGOUT = \"LOGOUT\";\n\nexport const login = async (username, password) => {\n  return await axios.post(loginUrl, {\n    username,\n    password,\n  });\n};\n\nexport const loginSuccess = (data) => {\n  return {\n    type: LOGIN,\n    payload: data,\n  };\n};\n\nexport const logout = () => {\n  return {\n    type: LOGOUT,\n  };\n};\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Field, reduxForm } from \"redux-form\";\nimport EyeIcon from \"mdi-react/EyeIcon\";\nimport KeyVariantIcon from \"mdi-react/KeyVariantIcon\";\nimport AccountOutlineIcon from \"mdi-react/AccountOutlineIcon\";\nimport renderCheckBoxField from \"../../../shared/components/form/CheckBox\";\nimport validate from \"./validation\";\nimport { Button } from \"reactstrap\";\nimport inputField from \"../../../component/imput/input\";\nimport { login, loginSuccess } from \"../../../redux/actions/profile\";\nimport { useDispatch } from \"react-redux\";\n// import { useAlert } from \"react-alert\";\nconst LogInForm = ({ handleSubmit }) => {\n  const [isPasswordShown, setIsPasswordShown] = useState(false);\n\n  const showPassword = () => {\n    setIsPasswordShown(!isPasswordShown);\n  };\n  const [loading, setloading] = useState(false);\n  const [error, seterror] = useState();\n  const dispatch = useDispatch();\n  // const cAlert = useAlert();\n  const onSubmit = async (data) => {\n    try {\n      setloading(true);\n      const response = await login(data.name, data.password);\n      if (response.data.success) {\n        const user = response.data.data;\n        user[\"token\"] = response.data.token;\n        dispatch(loginSuccess(user));\n        setloading(false);\n      } else {\n        setloading(false);\n        seterror(response.data.message);\n      }\n    } catch (err) {\n      setloading(false);\n      seterror(\"Something went wrong\");\n    }\n  };\n\n  return (\n    <form className=\"form\" noValidate onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"form__form-group\">\n        <span className=\"form__form-group-label\">Username</span>\n        <div className=\"form__form-group-field\">\n          <div className=\"form__form-group-icon\">\n            <AccountOutlineIcon />\n          </div>\n          <Field\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Name\"\n            component={inputField}\n          />\n        </div>\n      </div>\n      <div className=\"form__form-group\">\n        <span className=\"form__form-group-label\">Password</span>\n        <div className=\"form__form-group-field\">\n          <div className=\"form__form-group-icon\">\n            <KeyVariantIcon />\n          </div>\n          <Field\n            name=\"password\"\n            type={isPasswordShown ? \"text\" : \"password\"}\n            placeholder=\"Password\"\n            component={inputField}\n          />\n          <button\n            className={`form__form-group-button${\n              isPasswordShown ? \" active\" : \"\"\n            }`}\n            onClick={() => showPassword()}\n            type=\"button\"\n          >\n            <EyeIcon />\n          </button>\n        </div>\n        <div className=\"account__forgot-password\">\n          <a href=\"/\">Forgot a password?</a>\n        </div>\n      </div>\n      <div className=\"form__form-group\">\n        <div className=\"form__form-group-field\">\n          <Field\n            name=\"remember_me\"\n            component={renderCheckBoxField}\n            label=\"Remember me\"\n          />\n        </div>\n      </div>\n      <Button\n        disabled={loading}\n        className=\"btn btn-primary account__btn account__btn--small\"\n        type=\"submit\"\n      >\n        {!loading ? \"Sign In\" : \"Loading...\"}\n      </Button>\n\n      <Link\n        className=\"btn btn-outline-primary account__btn account__btn--small\"\n        to=\"/log_in\"\n      >\n        Create Account\n      </Link>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  validate: validate,\n  form: \"log_in_form\",\n})(LogInForm);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport FacebookIcon from \"mdi-react/FacebookIcon\";\nimport GooglePlusIcon from \"mdi-react/GooglePlusIcon\";\nimport LogInForm from \"./components/LogInForm\";\n\nconst LogIn = () => {\n  return (\n    <div className=\"account\">\n      <div className=\"account__wrapper\">\n        <div className=\"account__card\">\n          <div className=\"account__head\">\n            <h3 className=\"account__title\">\n              Welcome to\n              <span className=\"account__logo\">\n                {\" \"}\n                Travel\n                <span className=\"account__logo-accent\">Right</span>\n              </span>\n            </h3>\n            <h4 className=\"account__subhead subhead\">Login to admin Panels</h4>\n          </div>\n          <LogInForm />\n          <div className=\"account__or\">\n            <p>Or Easily Using</p>\n          </div>\n          <div className=\"account__social\">\n            <Link\n              className=\"account__social-btn account__social-btn--facebook\"\n              to=\"\"\n            >\n              <FacebookIcon />\n            </Link>\n            <Link\n              className=\"account__social-btn account__social-btn--google\"\n              to=\"\"\n            >\n              <GooglePlusIcon />\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LogIn;\n\n// if you want to add select, date-picker and time-picker in your app you need to uncomment the first\n// four lines in /scss/components/form.scss to add styles\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SortIcon from 'mdi-react/SortIcon';\nimport SortAscendingIcon from 'mdi-react/SortAscendingIcon';\nimport SortDescendingIcon from 'mdi-react/SortDescendingIcon';\n\nconst Header = ({ column, isSortable }) => (\n  <span className=\"react-table__column-header\">\n    <span className={isSortable ? 'react-table__column-header sortable' : ''}>\n      {column.render('Header')}\n    </span>\n    {isSortable && column.canSort && <Sorting column={column} />}\n  </span>\n);\n\nHeader.propTypes = {\n  column: PropTypes.shape({\n    Header: PropTypes.string,\n    disableGlobalFilter: PropTypes.bool,\n    accessor: PropTypes.func,\n    render: PropTypes.func,\n    canSort: PropTypes.bool,\n  }).isRequired,\n  isSortable: PropTypes.bool.isRequired,\n};\n\nconst Sorting = ({ column }) => (\n  <span className=\"react-table__column-header sortable\">\n    {column.isSortedDesc === undefined ? (\n      <SortIcon />\n    ) : (\n      <span>\n        {column.isSortedDesc\n          ? <SortDescendingIcon />\n          : <SortAscendingIcon />}\n      </span>\n    )}\n  </span>\n);\n\nSorting.propTypes = {\n  column: PropTypes.shape({\n    Header: PropTypes.string,\n    disableGlobalFilter: PropTypes.bool,\n    accessor: PropTypes.func,\n    isSorted: PropTypes.bool,\n    isSortedDesc: PropTypes.bool,\n  }).isRequired,\n};\n\nconst getStylesResizable = (props, align = 'left') => [\n  props,\n  {\n    style: {\n      justifyContent: align === 'right' ? 'flex-end' : 'flex-start',\n      alignItems: 'flex-start',\n      display: 'flex',\n    },\n  },\n];\n\nconst ReactTableHeader = ({ headerGroups, isResizable, isSortable }) => {\n  const headerPropsSortable = (props, { column }) => {\n    if (column.getSortByToggleProps && isSortable) {\n      return column.getSortByToggleProps;\n    }\n    return { column };\n  };\n  const headerPropsResize = (props, { column }) => {\n    if (column.getResizerProps) {\n      return getStylesResizable(props, column.align);\n    }\n    return { column };\n  };\n\n  return (\n    <thead className=\"thead th\">\n      {headerGroups.map(headerGroup => (\n        <tr {...headerGroup.getHeaderGroupProps()} className=\"react-table thead tr\">\n          {headerGroup.headers.map(column => (\n            <th\n              {...column.getHeaderProps(headerPropsSortable)}\n              {...column.getHeaderProps(headerPropsResize)}\n              {...column.getHeaderProps()}\n            >\n              <Header\n                column={column}\n                isSortable={isSortable}\n              />\n              {isResizable && (\n                <div {...column.getResizerProps()} className={`resizer ${column.isResizing && 'isResizing'}`} />\n              )}\n            </th>\n          ))}\n        </tr>\n      ))}\n    </thead>\n  );\n};\n\nReactTableHeader.propTypes = {\n  headerGroups: PropTypes.arrayOf(PropTypes.shape({\n    headers: PropTypes.arrayOf(PropTypes.shape()),\n    getHeaderGroupProps: PropTypes.func,\n    getFooterGroupProps: PropTypes.func,\n  })).isRequired,\n  isResizable: PropTypes.bool.isRequired,\n  isSortable: PropTypes.bool.isRequired,\n};\n\nexport default ReactTableHeader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\nimport { ThemeProps } from \"../prop-types/ReducerProps\";\n\nconst getItemStyle = (draggableStyle, theme) => ({\n  cursor: \"pointer\",\n  background: theme.className === \"theme-light\" ? \"#ffffff\" : \"#232329\",\n  zIndex: 101,\n  ...draggableStyle,\n});\n\nconst getListStyle = (theme) => ({\n  background: theme.className === \"theme-light\" ? \"#f2f4f7\" : \"#2a2a31\",\n});\n\nconst ReactTableDnDBody = ({\n  page,\n  getTableBodyProps,\n  prepareRow,\n  updateDraggableData,\n  theme,\n}) => {\n  const onDragEnd = (result) => {\n    if (!result.destination) {\n      return;\n    }\n    updateDraggableData(result);\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId=\"draggable\" type=\"data\">\n        {(provided) => (\n          <tbody\n            className=\"table table--bordered\"\n            ref={provided.innerRef}\n            {...getTableBodyProps()}\n            {...provided.droppableProps}\n            style={getListStyle(theme)}\n          >\n            {page.map((val) => {\n              prepareRow(val);\n              return (\n                <Draggable\n                  draggableId={`${val.id}`}\n                  key={val.id}\n                  index={Number(val.id)}\n                  type=\"data\"\n                >\n                  {(provide) => (\n                    <tr\n                      className=\"react-dnd-draggable\"\n                      ref={provide.innerRef}\n                      {...provide.draggableProps}\n                      {...provide.dragHandleProps}\n                      {...val.getRowProps()}\n                      style={getItemStyle(provide.draggableProps.style, theme)}\n                    >\n                      {val.cells.map((cell) => (\n                        <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                      ))}\n                    </tr>\n                  )}\n                </Draggable>\n              );\n            })}\n            {provided.placeholder}\n          </tbody>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n\nReactTableDnDBody.propTypes = {\n  page: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  getTableBodyProps: PropTypes.func.isRequired,\n  prepareRow: PropTypes.func.isRequired,\n  updateDraggableData: PropTypes.func.isRequired,\n  theme: ThemeProps.isRequired,\n};\n\nexport default ReactTableDnDBody;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { ThemeProps } from \"../prop-types/ReducerProps\";\nimport ReactTableDnDBody from \"./ReactTableDnDBody\";\n\nconst ReactTableDefaultBody = ({ page, getTableBodyProps, prepareRow }) => (\n  <tbody className=\"table table--bordered\" {...getTableBodyProps()}>\n    {page.map((row) => {\n      prepareRow(row);\n      return (\n        <tr {...row.getRowProps()}>\n          {row.cells.map((cell) => (\n            <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n          ))}\n        </tr>\n      );\n    })}\n  </tbody>\n);\n\nReactTableDefaultBody.propTypes = {\n  page: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  getTableBodyProps: PropTypes.func.isRequired,\n  prepareRow: PropTypes.func.isRequired,\n};\n\nconst ReactTableBody = ({\n  page,\n  getTableBodyProps,\n  prepareRow,\n  withDragAndDrop,\n  updateDraggableData,\n  theme,\n}) => (\n  <Fragment>\n    {withDragAndDrop ? (\n      <ReactTableDnDBody\n        page={page}\n        getTableBodyProps={getTableBodyProps}\n        prepareRow={prepareRow}\n        updateDraggableData={updateDraggableData}\n        theme={theme}\n      />\n    ) : (\n      <ReactTableDefaultBody\n        page={page}\n        getTableBodyProps={getTableBodyProps}\n        prepareRow={prepareRow}\n      />\n    )}\n  </Fragment>\n);\n\nReactTableBody.propTypes = {\n  page: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  getTableBodyProps: PropTypes.func.isRequired,\n  prepareRow: PropTypes.func.isRequired,\n  updateDraggableData: PropTypes.func.isRequired,\n  withDragAndDrop: PropTypes.bool.isRequired,\n  theme: ThemeProps.isRequired,\n};\n\nexport default connect((state) => ({\n  theme: state.theme,\n}))(ReactTableBody);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ReactTableFooter = ({ footerGroups }) => (\n  <tfoot className=\"tfoot\">\n    {footerGroups.map(group => (\n      <tr {...group.getFooterGroupProps()}>\n        {group.headers.map(column => (\n          <td {...column.getFooterProps()}>{column.render('Footer')}</td>\n        ))}\n      </tr>\n    ))}\n  </tfoot>\n);\n\nReactTableFooter.propTypes = {\n  footerGroups: PropTypes.arrayOf(PropTypes.shape({\n    headers: PropTypes.arrayOf(PropTypes.shape()),\n    getFooterGroupProps: PropTypes.func,\n  })).isRequired,\n};\n\nexport default ReactTableFooter;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useAsyncDebounce } from \"react-table\";\nimport { Input } from \"reactstrap\";\n\nconst ReactTableFilter = ({\n  rows,\n  setGlobalFilter,\n  setFilterValue,\n  globalFilter,\n  placeholder,\n  dataLength,\n}) => {\n  const [value, setValue] = useState(globalFilter);\n  const onChange = useAsyncDebounce((item) => {\n    setGlobalFilter(item || undefined);\n  }, 200);\n  if (value) {\n    setFilterValue(value);\n  }\n\n  return (\n    <div className=\"table__search\">\n      <Input\n        className=\"table__search table__search-input\"\n        value={value}\n        onChange={(e) => {\n          setValue(e.target.value);\n          onChange(e.target.value);\n        }}\n        placeholder={`${placeholder}`}\n      />\n      {dataLength !== rows.length && <span>Found {rows.length} matches</span>}\n    </div>\n  );\n};\n\nconst filterGreaterThan = (rows, id, filterValue) =>\n  rows.filter((row) => {\n    const rowValue = row.values[id];\n    return rowValue >= filterValue;\n  });\n\nfilterGreaterThan.autoRemove = (val) => typeof val !== \"number\";\n\nReactTableFilter.propTypes = {\n  rows: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  setGlobalFilter: PropTypes.func.isRequired,\n  setFilterValue: PropTypes.func,\n  globalFilter: PropTypes.string,\n  placeholder: PropTypes.string,\n  dataLength: PropTypes.number.isRequired,\n};\n\nReactTableFilter.defaultProps = {\n  setFilterValue: () => {},\n  globalFilter: undefined,\n  placeholder: \"Search...\",\n};\n\nexport default ReactTableFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Pagination,\n  PaginationItem,\n  PaginationLink,\n  FormGroup,\n  Input,\n} from 'reactstrap';\nimport ChevronRightIcon from 'mdi-react/ChevronRightIcon';\nimport ChevronDoubleRightIcon from 'mdi-react/ChevronDoubleRightIcon';\nimport ChevronLeftIcon from 'mdi-react/ChevronLeftIcon';\nimport ChevronDoubleLeftIcon from 'mdi-react/ChevronDoubleLeftIcon';\n\nconst ReactTablePagination = ({\n  dataLength,\n  page,\n  gotoPage,\n  canPreviousPage,\n  pageOptions,\n  pageSize,\n  pageIndex,\n  previousPage,\n  nextPage,\n  canNextPage,\n  setPageSize,\n  manualPageSize,\n}) => {\n  const arrayPageIndex = (pageIndex - 2) < 0\n    ? pageOptions.slice(0, pageIndex + 3)\n    : pageOptions.slice((pageIndex - 2), (pageIndex + 3));\n\n  return (\n    <Pagination className=\"pagination\" dir=\"ltr\">\n      <div className=\"pagination\">\n        <PaginationLink\n          className=\"pagination__link pagination__link--arrow\"\n          type=\"button\"\n          onClick={() => gotoPage(0)}\n          disabled={!canPreviousPage}\n        >\n          <ChevronDoubleLeftIcon className=\"pagination__link-icon\" />\n        </PaginationLink>\n        <PaginationLink\n          className=\"pagination__link pagination__link--arrow\"\n          type=\"button\"\n          onClick={previousPage}\n          disabled={!canPreviousPage}\n        >\n          <ChevronLeftIcon className=\"pagination__link-icon\" />\n        </PaginationLink>\n        {arrayPageIndex.map(i => (\n          <PaginationItem\n            className=\"pagination__item\"\n            active={pageIndex === i}\n            key={i}\n          >\n            <PaginationLink\n              key={i}\n              className=\"pagination__link\"\n              type=\"button\"\n              onClick={() => gotoPage(i)}\n            >\n              {i + 1}\n            </PaginationLink>\n          </PaginationItem>\n        ))}\n        <PaginationItem className=\"pagination__item\">\n          <PaginationLink\n            className=\"pagination__link pagination__link--arrow\"\n            type=\"button\"\n            onClick={nextPage}\n            disabled={!canNextPage}\n          >\n            <ChevronRightIcon className=\"pagination__link-icon\" />\n          </PaginationLink>\n        </PaginationItem>\n        <PaginationItem className=\"pagination__item\">\n          <PaginationLink\n            className=\"pagination__link pagination__link--arrow\"\n            type=\"button\"\n            onClick={() => gotoPage(pageOptions.length - 1)}\n            disabled={!canNextPage}\n          >\n            <ChevronDoubleRightIcon className=\"pagination__link-icon\" />\n          </PaginationLink>\n        </PaginationItem>\n        <PaginationItem className=\"pagination__item pagination-info\">\n          Showing {pageSize * pageIndex + 1} to {pageSize * pageIndex + page.length} of {dataLength}\n        </PaginationItem>\n        {manualPageSize.length > 1 && (\n          <PaginationItem className=\"pagination__item\">\n            <FormGroup className=\"pagination__select-form \">\n              <Input\n                className=\"pagination__item pagination-info\"\n                type=\"select\"\n                name=\"select\"\n                id=\"exampleSelect\"\n                value={pageSize}\n                onChange={(event) => {\n                  setPageSize(Number(event.target.value));\n                }}\n              >\n                {manualPageSize.map(item => (\n                  <option className=\"pagination__item pagination__item-option\" key={item} value={item}>\n                    Show {item}\n                  </option>\n                ))}\n              </Input>\n            </FormGroup>\n          </PaginationItem>\n        )}\n      </div>\n    </Pagination>\n  );\n};\n\nReactTablePagination.propTypes = {\n  dataLength: PropTypes.number.isRequired,\n  page: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  gotoPage: PropTypes.func.isRequired,\n  canNextPage: PropTypes.bool.isRequired,\n  canPreviousPage: PropTypes.bool.isRequired,\n  pageOptions: PropTypes.arrayOf(PropTypes.number).isRequired,\n  pageSize: PropTypes.number.isRequired,\n  pageIndex: PropTypes.number.isRequired,\n  previousPage: PropTypes.func.isRequired,\n  nextPage: PropTypes.func.isRequired,\n  setPageSize: PropTypes.func.isRequired,\n  manualPageSize: PropTypes.arrayOf(PropTypes.number),\n};\n\nReactTablePagination.defaultProps = {\n  manualPageSize: [10, 20, 30, 40],\n};\n\nexport default ReactTablePagination;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  useTable,\n  useGlobalFilter,\n  usePagination,\n  useSortBy,\n  useResizeColumns,\n  useRowSelect,\n} from \"react-table\";\nimport ReactTableHeader from \"./ReactTableHeader\";\nimport BodyReactTable from \"./ReactTableBody\";\nimport ReactTableFooter from \"./ReactTableFooter\";\nimport ReactTableFilter from \"./ReactTableFilter\";\nimport ReactTablePagination from \"./ReactTablePagination\";\n\nconst ReactTableConstructor = ({\n  tableConfig,\n  tableOptions,\n  tableOptionalHook,\n}) => {\n  const {\n    isEditable,\n    isResizable,\n    isSortable,\n    withPagination,\n    withSearchEngine,\n    manualPageSize,\n    placeholder,\n  } = tableConfig;\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    footerGroups,\n    state,\n    rows,\n    prepareRow,\n    page,\n    pageCount,\n    pageOptions,\n    gotoPage,\n    previousPage,\n    canPreviousPage,\n    nextPage,\n    canNextPage,\n    setPageSize,\n    setGlobalFilter,\n    withDragAndDrop,\n    updateDraggableData,\n    updateEditableData,\n    dataLength,\n    state: { pageIndex, pageSize },\n  } = useTable(\n    tableOptions,\n    useGlobalFilter,\n    useSortBy,\n    usePagination,\n    useResizeColumns,\n    useRowSelect,\n    ...tableOptionalHook\n  );\n\n  return (\n    <div>\n      {withSearchEngine && (\n        <ReactTableFilter\n          rows={rows}\n          setGlobalFilter={setGlobalFilter}\n          setFilterValue={tableOptions.setFilterValue}\n          globalFilter={state.globalFilter}\n          placeholder={placeholder}\n          dataLength={dataLength}\n        />\n      )}\n      <div\n        className={\n          withPagination\n            ? \"table react-table\"\n            : \"table react-table table--not-pagination\"\n        }\n      >\n        <table\n          {...getTableProps()}\n          className={\n            isEditable\n              ? \"react-table editable-table\"\n              : \"react-table resizable-table\"\n          }\n        >\n          <ReactTableHeader\n            headerGroups={headerGroups}\n            isSortable={isSortable}\n            isResizable={isResizable}\n          />\n          <BodyReactTable\n            page={page}\n            getTableBodyProps={getTableBodyProps}\n            prepareRow={prepareRow}\n            updateDraggableData={updateDraggableData}\n            updateEditableData={updateEditableData}\n            isEditable={isEditable}\n            withDragAndDrop={withDragAndDrop}\n          />\n          {(pageCount === pageIndex + 1 ||\n            (!withPagination && rows.length !== 0)) && (\n            <ReactTableFooter footerGroups={footerGroups} />\n          )}\n        </table>\n      </div>\n      {withPagination && rows.length > 0 && (\n        <ReactTablePagination\n          page={page}\n          gotoPage={gotoPage}\n          previousPage={previousPage}\n          nextPage={nextPage}\n          canPreviousPage={canPreviousPage}\n          canNextPage={canNextPage}\n          pageOptions={pageOptions}\n          pageSize={pageSize}\n          pageIndex={pageIndex}\n          pageCount={pageCount}\n          setPageSize={setPageSize}\n          manualPageSize={manualPageSize}\n          dataLength={dataLength}\n        />\n      )}\n    </div>\n  );\n};\n\nReactTableConstructor.propTypes = {\n  tableConfig: PropTypes.shape({\n    isEditable: PropTypes.bool,\n    isResizable: PropTypes.bool,\n    isSortable: PropTypes.bool,\n    withDragAndDrop: PropTypes.bool,\n    withPagination: PropTypes.bool,\n    withSearchEngine: PropTypes.bool,\n    manualPageSize: PropTypes.arrayOf(PropTypes.number),\n    placeholder: PropTypes.string,\n  }),\n  tableOptions: PropTypes.shape({\n    columns: PropTypes.arrayOf(\n      PropTypes.shape({\n        key: PropTypes.string,\n        name: PropTypes.string,\n      })\n    ),\n    data: PropTypes.arrayOf(PropTypes.shape()),\n    setFilterValue: PropTypes.func,\n    updateDraggableData: PropTypes.func,\n    updateEditableData: PropTypes.func,\n    defaultColumn: PropTypes.oneOfType([\n      PropTypes.any,\n      PropTypes.shape({\n        Cell: PropTypes.func,\n      }).isRequired,\n    ]),\n    isEditable: PropTypes.bool,\n    withDragAndDrop: PropTypes.bool,\n    dataLength: PropTypes.number,\n  }),\n  tableOptionalHook: PropTypes.arrayOf(PropTypes.func).isRequired,\n};\n\nReactTableConstructor.defaultProps = {\n  tableConfig: {\n    isEditable: false,\n    isResizable: false,\n    isSortable: false,\n    withDragAndDrop: false,\n    withPagination: false,\n    withSearchEngine: false,\n    manualPageSize: [10, 20, 30, 40],\n    placeholder: \"Search...\",\n  },\n  tableOptions: [\n    {\n      columns: [],\n      data: [],\n      setFilterValue: () => {},\n      updateDraggableData: () => {},\n      updateEditableData: () => {},\n      defaultColumn: [],\n      withDragAndDrop: false,\n      dataLength: null,\n      disableSortBy: false,\n      manualSortBy: false,\n      manualGlobalFilter: false,\n      manualPagination: false,\n    },\n  ],\n};\n\nexport default ReactTableConstructor;\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Highlighter from \"react-highlight-words\";\n\nconst ReactTableCell = ({ value: initialValue, state, column }) => (\n  <Fragment>\n    {column.disableGlobalFilter ? (\n      <Fragment>{initialValue}</Fragment>\n    ) : (\n      <Highlighter\n        className=\"react-table__highlighter\"\n        searchWords={[state.globalFilter]}\n        autoEscape\n        textToHighlight={initialValue}\n      />\n    )}\n  </Fragment>\n);\n\nReactTableCell.propTypes = {\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  state: PropTypes.shape({\n    globalFilter: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  }).isRequired,\n  column: PropTypes.shape().isRequired,\n};\n\nexport default ReactTableCell;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Input } from \"reactstrap\";\nimport ReactTableCell from \"./ReactTableCell\";\n\nconst EditableCell = ({\n  value: initialValue,\n  row: { index },\n  column: { id },\n  column,\n  state,\n  updateEditableData,\n}) => {\n  const [value, setValue] = useState(initialValue);\n  const [isActiveInput, setIsActiveInput] = useState(false);\n\n  const handleClick = () => {\n    setIsActiveInput(!isActiveInput);\n  };\n  const onChange = (event) => {\n    setValue(event.target.value);\n  };\n  const updateData = () => {\n    updateEditableData(index, id, value);\n    setIsActiveInput(false);\n  };\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      updateData();\n    }\n  };\n\n  useEffect(() => {\n    setValue(initialValue);\n  }, [initialValue]);\n\n  return (\n    <div onDoubleClick={handleClick}>\n      {isActiveInput ? (\n        <div className=\"table__editable-table--cell-active\">\n          <Input\n            className=\"table__edit-form\"\n            value={value}\n            onChange={onChange}\n            onBlur={updateData}\n            onKeyPress={handleKeyPress}\n          />\n        </div>\n      ) : (\n        <ReactTableCell value={value} column={column} state={state} />\n      )}\n    </div>\n  );\n};\n\nEditableCell.propTypes = {\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  row: PropTypes.shape({\n    index: PropTypes.number,\n  }).isRequired,\n  column: PropTypes.shape({\n    id: PropTypes.string,\n  }).isRequired,\n  state: PropTypes.shape({\n    globalFilter: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  }).isRequired,\n  updateEditableData: PropTypes.func.isRequired,\n};\n\nexport default EditableCell;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useFlexLayout } from \"react-table\";\nimport ReactTableConstructor from \"./ReactTableConstructor\";\nimport ReactTableCell from \"./ReactTableCell\";\nimport ReactTableCellEditable from \"./ReactTableEditableCell\";\n\nconst ReactTableBase = ({\n  tableConfig,\n  columns,\n  data,\n  updateDraggableData,\n  updateEditableData,\n}) => {\n  const {\n    isEditable,\n    isResizable,\n    isSortable,\n    withDragAndDrop,\n    withPagination,\n    withSearchEngine,\n    manualPageSize,\n  } = tableConfig;\n  const [filterValue, setFilterValue] = useState(null);\n  const tableOptions = {\n    columns,\n    data,\n    updateDraggableData,\n    updateEditableData,\n    setFilterValue,\n    defaultColumn: {},\n    isEditable,\n    withDragAndDrop: withDragAndDrop || false,\n    dataLength: data.length,\n    autoResetPage: false,\n    disableSortBy: !isSortable,\n    manualSortBy: !isSortable,\n    manualGlobalFilter: !withSearchEngine,\n    manualPagination: !withPagination,\n    initialState: {\n      pageIndex: 0,\n      pageSize: manualPageSize ? manualPageSize[0] : 10,\n      globalFilter: withSearchEngine && filterValue ? filterValue : undefined,\n    },\n  };\n\n  let tableOptionalHook = [];\n  if (isResizable) tableOptionalHook = [useFlexLayout];\n  if (withSearchEngine) {\n    tableOptions.defaultColumn = {\n      Cell: ReactTableCell,\n    };\n  }\n  if (isEditable) {\n    tableOptions.defaultColumn = {\n      Cell: ReactTableCellEditable,\n    };\n  }\n\n  return (\n    <ReactTableConstructor\n      key={isResizable || isEditable ? \"modified\" : \"common\"}\n      tableConfig={tableConfig}\n      tableOptions={tableOptions}\n      tableOptionalHook={tableOptionalHook}\n    />\n  );\n};\n\nReactTableBase.propTypes = {\n  tableConfig: PropTypes.shape({\n    isEditable: PropTypes.bool,\n    isResizable: PropTypes.bool,\n    isSortable: PropTypes.bool,\n    withDragAndDrop: PropTypes.bool,\n    withPagination: PropTypes.bool,\n    withSearchEngine: PropTypes.bool,\n    manualPageSize: PropTypes.arrayOf(PropTypes.number),\n  }),\n  columns: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ),\n  data: PropTypes.arrayOf(PropTypes.shape()),\n  updateDraggableData: PropTypes.func,\n  updateEditableData: PropTypes.func,\n};\n\nReactTableBase.defaultProps = {\n  tableConfig: {\n    isEditable: false,\n    isResizable: false,\n    isSortable: false,\n    withDragAndDrop: false,\n    withPagination: false,\n    withSearchEngine: false,\n    manualPageSize: [],\n  },\n  columns: [\n    { Header: \"#\", accessor: \"id\" },\n    { Header: \"Header Example Title one\", accessor: \"first\" },\n    { Header: \"Header Example Title two\", accessor: \"last\" },\n  ],\n  data: [\n    { id: 1, first: \"Cell Example Data one\", last: \"Cell Example Data two\" },\n    { id: 2, first: \"Cell Example Data three\", last: \"Cell Example Data four\" },\n  ],\n  updateDraggableData: () => {},\n  updateEditableData: () => {},\n};\n\nexport default ReactTableBase;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, CardBody, Col } from \"reactstrap\";\nimport ReactTableBase from \"../../shared/tables/ReactTableBase\";\n\nconst reorder = (rows, startIndex, endIndex) => {\n  const result = Array.from(rows);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\nconst DataReactTable = ({ reactTableData }) => {\n  const [rows, setData] = useState(reactTableData.tableRowsData);\n  const [isEditable, setIsEditable] = useState(false);\n  const [isResizable, setIsResizable] = useState(false);\n  const [isSortable, setIsSortable] = useState(false);\n  // const [isDisabledDragAndDrop, setIsDisabledDragAndDrop] = useState(false);\n  // const [isDisabledEditable, setIsDisabledEditable] = useState(false);\n  // const [isDisabledResizable, setIsDisabledResizable] = useState(false);\n  const [withDragAndDrop, setWithDragAndDrop] = useState(false);\n  const [withPagination, setWithPaginationTable] = useState(false);\n  const [withSearchEngine, setWithSearchEngine] = useState(true);\n\n  // const handleClickIsEditable = () => {\n  //   if (!withDragAndDrop) setIsDisabledResizable(!isDisabledResizable);\n  //   setIsResizable(false);\n  //   setIsEditable(!isEditable);\n  // };\n  // const handleClickIsResizable = () => {\n  //   setIsEditable(false);\n  //   setWithDragAndDrop(false);\n  //   setIsDisabledDragAndDrop(!isDisabledDragAndDrop);\n  //   setIsDisabledEditable(!isDisabledEditable);\n  //   setIsResizable(!isResizable);\n  // };\n  // const handleClickIsSortable = () => {\n  //   setIsSortable(!isSortable);\n  // };\n  // const handleClickWithDragAndDrop = () => {\n  //   if (!isEditable) setIsDisabledResizable(!isDisabledResizable);\n  //   setIsResizable(false);\n  //   setWithDragAndDrop(!withDragAndDrop);\n  // };\n  // const handleClickWithPagination = () => {\n  //   setWithPaginationTable(withPagination);\n  // };\n  // const handleClickWithSearchEngine = () => {\n  //   setWithSearchEngine(!withSearchEngine);\n  // };\n\n  const updateDraggableData = (result) => {\n    const items = reorder(rows, result.source.index, result.destination.index);\n    setData(items);\n  };\n\n  const updateEditableData = (rowIndex, columnId, value) => {\n    setData((old) =>\n      old.map((item, index) => {\n        if (index === rowIndex) {\n          return {\n            ...old[rowIndex],\n            [columnId]: value,\n          };\n        }\n        return item;\n      })\n    );\n  };\n\n  const tableConfig = {\n    isEditable,\n    isResizable,\n    isSortable,\n    withDragAndDrop,\n    withPagination,\n    withSearchEngine,\n    manualPageSize: [10, 20, 30, 40],\n    placeholder: \"Search...\",\n  };\n\n  return (\n    <Col md={12} lg={12}>\n      <Card>\n        <CardBody>\n          <div className=\"react-table__wrapper\">\n            <div></div>\n            {/* <div className=\"card__title\">\n              <h5 className=\"bold-text\">data react-table</h5>\n              <h5 className=\"subhead\">\n                Use table with&nbsp;\n                <span className=\"red-text\">table customizer</span>\n              </h5>\n            </div> */}\n            {/* <ReactTableCustomizer\n              handleClickIsEditable={handleClickIsEditable}\n              handleClickIsResizable={handleClickIsResizable}\n              handleClickIsSortable={handleClickIsSortable}\n              handleClickWithDragAndDrop={handleClickWithDragAndDrop}\n              handleClickWithPagination={handleClickWithPagination}\n              handleClickWithSearchEngine={handleClickWithSearchEngine}\n              isEditable={isEditable}\n              isResizable={isResizable}\n              isSortable={isSortable}\n              isDisabledDragAndDrop={isDisabledDragAndDrop}\n              isDisabledEditable={isDisabledEditable}\n              isDisabledResizable={isDisabledResizable}\n              withDragAndDrop={withDragAndDrop}\n              withPagination={withPagination}\n              withSearchEngine={withSearchEngine}\n              fullCustomizer\n            /> */}\n          </div>\n          <ReactTableBase\n            key={\n              withSearchEngine || isResizable || isEditable\n                ? \"modified\"\n                : \"common\"\n            }\n            columns={reactTableData.tableHeaderData}\n            data={rows}\n            updateEditableData={updateEditableData}\n            updateDraggableData={updateDraggableData}\n            tableConfig={tableConfig}\n          />\n        </CardBody>\n      </Card>\n    </Col>\n  );\n};\n\nDataReactTable.propTypes = {\n  reactTableData: PropTypes.shape({\n    tableHeaderData: PropTypes.arrayOf(\n      PropTypes.shape({\n        key: PropTypes.string,\n        name: PropTypes.string,\n      })\n    ),\n    tableRowsData: PropTypes.arrayOf(PropTypes.shape()),\n    defaultTableHeaderData: PropTypes.arrayOf(PropTypes.shape()),\n    defaultTableRowData: PropTypes.arrayOf(PropTypes.shape()),\n  }).isRequired,\n};\n\nexport default DataReactTable;\n","const StatusFormatter = (value) =>\n  value === 1 ? (\n    <span className=\"badge badge-secondary\">Pending</span>\n  ) : value === 2 ? (\n    <span className=\"badge badge-success\">Approved</span>\n  ) : (\n    <span className=\"badge badge-warning\">Suspended</span>\n  );\nexport default StatusFormatter;\n","import { Link } from \"react-router-dom\";\n\nconst ActionFormatter = (onclick, link, stat) => [\n  <Link to={link} className=\"btn btn-outline-primary btn-sm\">\n    <span className=\"lnr lnr-eye\"></span>\n  </Link>,\n  stat !== 2 && (\n    <button className=\"btn btn-success btn-sm rounded\" onClick={onclick}>\n      <span className=\"lnr lnr-thumbs-up\"></span>\n    </button>\n  ),\n  stat !== 3 && (\n    <button className=\"btn btn-danger btn-sm rounded\" onClick={onclick}>\n      <span className=\"lnr lnr-thumbs-down\"></span>\n    </button>\n  ),\n];\nexport default ActionFormatter;\n","import axios from \"axios\";\nexport const normalPost = (data, api) => {\n  return axios.post(api, data);\n};\nexport const normalGet = (api) => {\n  return axios.get(api);\n};\nexport const authGet = (api, token) => {\n  return axios.get(api, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  });\n};\n","import { productListUrl } from \"../../utility/api\";\nimport { authGet } from \"../../utility/request\";\n\nexport const FETCH_PRODUCT_START = \"FETCH_PRODUCT_START\";\nexport const FETCH_PRODUCT_SUCCESS = \"FETCH_PRODUCT_SUCCESS\";\nexport const FETCH_PRODUCT_FAIL = \"FETCH_PRODUCT_FAIL\";\n\nexport const SUSPEND_PRODUCT = \"SUSPEND_PRODUCT\";\nexport const APPROVE_PRODUCT = \"APPROVE_PRODUCT\";\n\nconst fetchProductStart = () => {\n  return {\n    type: FETCH_PRODUCT_START,\n  };\n};\nconst fetchProductFail = (err) => {\n  return {\n    type: FETCH_PRODUCT_FAIL,\n    payload: err,\n  };\n};\nconst fetchProductSuccess = (data) => {\n  return {\n    type: FETCH_PRODUCT_SUCCESS,\n    payload: data,\n  };\n};\n\nexport const fetchProdut = (token) => async (dispatch) => {\n  dispatch(fetchProductStart());\n  try {\n    const response = await authGet(productListUrl, token);\n    if (response.data.success) {\n      dispatch(fetchProductSuccess(response.data.data));\n    } else {\n      dispatch(fetchProductFail(response.data.message));\n    }\n  } catch (err) {\n    dispatch(fetchProductFail(err.toString()));\n  }\n};\n\nexport const approveProduct = (productId, type) => {\n  return {\n    type: type === 1 ? APPROVE_PRODUCT : SUSPEND_PRODUCT,\n    payload: productId,\n  };\n};\n","import React, { useMemo, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport moment from \"moment\";\nimport {\n  approveProductApi,\n  baseUrl,\n  suspendProductApi,\n} from \"../../../utility/api\";\nimport StatusFormatter from \"../../../component/alert/statusFormater\";\nimport ActionFormater from \"../../../component/alert/actionFormaterProduct\";\nimport { authGet } from \"../../../utility/request\";\nimport { approveProduct } from \"../../../redux/actions/product\";\n\nconst CreateTableData = () => {\n  const dispatch = useDispatch();\n  const [actionChange, setactionChange] = useState({});\n\n  const { products } = useSelector((state) => state.product);\n  const {\n    user: { token },\n  } = useSelector((state) => state.user);\n\n  const unSuspend = async (produId) => {\n    setactionChange({\n      loading: true,\n      prodId: produId,\n    });\n    try {\n      const response = await authGet(approveProductApi(produId), token);\n      if (response.data.success) {\n        dispatch(approveProduct(produId, 1));\n      } else {\n        dispatch(approveProduct(produId, 2));\n      }\n    } catch (err) {\n      dispatch(approveProduct(produId, 2));\n    }\n  };\n  const suspend = async (produId) => {\n    setactionChange({\n      loading: true,\n      prodId: produId,\n    });\n    try {\n      const response = await authGet(suspendProductApi(produId), token);\n      if (response.data.success) {\n      } else {\n      }\n    } catch (err) {}\n  };\n\n  const clickAction = (produId) => {\n    const product = products.find((e) => e._id === produId);\n    if (product.status === 2) {\n      suspend(produId);\n    } else {\n      unSuspend(produId);\n    }\n  };\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"#\",\n        accessor: \"id\",\n        disableGlobalFilter: true,\n        width: 65,\n      },\n      {\n        Header: \"Image\",\n        accessor: \"image\",\n        disableGlobalFilter: true,\n        disableSortBy: true,\n      },\n      {\n        Header: \"Name\",\n        accessor: \"name\",\n      },\n      {\n        Header: \"Sku\",\n        accessor: \"sku\",\n        disableGlobalFilter: true,\n      },\n      {\n        Header: \"Stock\",\n        accessor: \"stock\",\n        disableGlobalFilter: true,\n        width: 70,\n      },\n      {\n        Header: \"Price\",\n        accessor: \"price\",\n        disableGlobalFilter: true,\n      },\n      {\n        Header: \"Vendor\",\n        accessor: \"vendor\",\n        disableGlobalFilter: true,\n      },\n      {\n        Header: \"Discount\",\n        accessor: \"discount\",\n        width: 50,\n      },\n      {\n        Header: \"Status\",\n        accessor: \"status\",\n        formatter: StatusFormatter,\n        disableGlobalFilter: true,\n        disableSortBy: true,\n      },\n      {\n        Header: \"Action\",\n        accessor: \"action\",\n        disableGlobalFilter: true,\n        disableSortBy: true,\n        width: 110,\n      },\n      {\n        Header: \"CreatedAt\",\n        accessor: \"createdAt\",\n        disableGlobalFilter: true,\n      },\n      {\n        Header: \"UpdatedAt\",\n        accessor: \"updatedAt\",\n        disableGlobalFilter: true,\n        disableSortBy: true,\n      },\n    ],\n    []\n  );\n\n  const PhotoFormatter = (value) => (\n    <div className=\"products-list__img-wrap\">\n      <img height=\"70px\" width=\"50px\" src={baseUrl + \"/\" + value} alt=\"\" />\n    </div>\n  );\n\n  // const getImage = (img, alt) => <img src={`${baseUrl}${img}`} alt={alt} />;\n  let id = 0;\n  const data = [];\n  const rows = () => {\n    products.forEach((e) => {\n      data.push({\n        id,\n        name: e.name,\n        image: PhotoFormatter(e.gallery[0]),\n        sku: e.sku,\n        stock: e.stock,\n        price: e.price,\n        vendor: e.vendor,\n        status: StatusFormatter(e.status),\n        action: [ActionFormater(() => clickAction(e._id), \"ad\", e.status)],\n        discount: e.discount + \"%\",\n        updatedAt: moment(e.updatedAt).format(\"DD-MM-YYYY\"),\n        createdAt: moment(e.createdAt).format(\"DD-MM-YYYY\"),\n      });\n      id++;\n    });\n  };\n\n  rows();\n  const reactTableData = { tableHeaderData: columns, tableRowsData: data };\n  return reactTableData;\n};\n\nexport default CreateTableData;\n","import React, { useEffect } from \"react\";\nimport { Col, Container, Row } from \"reactstrap\";\nimport DataReactTable from \"../../component/table/tableBase\";\nimport CreateTableData from \"./component/createData\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchProdut } from \"../../redux/actions/product\";\n\nconst Product = () => {\n  const dispatch = useDispatch();\n  const {\n    user: { token },\n  } = useSelector((state) => state.user);\n  const { loading, error, listProduct } = useSelector((state) => state.product);\n  const reactTableData = CreateTableData();\n  useEffect(() => {\n    if (!listProduct) {\n      dispatch(fetchProdut(token));\n    }\n  }, [token, listProduct, dispatch]);\n  return (\n    <Container>\n      <Row>\n        <Col md={12}>\n          <h3 className=\"page-title\">Products</h3>\n          {/* <h3 className=\"page-subhead subhead\"></h3> */}\n        </Col>\n      </Row>\n      <Row>\n        {loading ? (\n          <p>loading...</p>\n        ) : error ? (\n          <p>{error}</p>\n        ) : (\n          <DataReactTable reactTableData={reactTableData} />\n        )}\n      </Row>\n    </Container>\n  );\n};\n\nexport default Product;\n","import { useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport { baseUrl } from \"../../../utility/api\";\n\nconst CreateTableData = () => {\n  const { categories } = useSelector((state) => state.category);\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"#\",\n        accessor: \"id\",\n        disableGlobalFilter: true,\n        width: 65,\n      },\n      {\n        Header: \"Title\",\n        accessor: \"title\",\n      },\n      {\n        Header: \"Slug\",\n        accessor: \"slug\",\n      },\n      {\n        Header: \"Category\",\n        accessor: \"category\",\n      },\n      {\n        Header: \"Child Category\",\n        accessor: \"childcategory\",\n      },\n\n      // { Header: \"Image\", accessor: \"image\" },\n      { Header: \"CreatedAt\", accessor: \"createdAt\" },\n      { Header: \"UpdatedAt\", accessor: \"updatedAt\" },\n    ],\n    []\n  );\n  const PhotoFormatter = (value) => (\n    <div className=\"products-list__img-wrap\">\n      <img height=\"70px\" width=\"50px\" src={baseUrl + \"/\" + value} alt=\"\" />\n    </div>\n  );\n  const data = [];\n  let id = 0;\n  const rows = () => {\n    categories.forEach((e) => {\n      data.push({\n        id: id,\n        title: e.title,\n        slug: e.slug,\n        category:\n          e.type === 1\n            ? \"____\"\n            : categories.find((f) => f._id === e._id).mainCategory,\n        childcategory:\n          e.type === 1 || e.type === 2\n            ? \"_____\"\n            : categories.find((f) => f._id === e._id).subCategory,\n        // image: PhotoFormatter(e.image),\n        createdAt: moment(e.createdAt).format(\"DD-MM-YYYY\"),\n        updatedAt: moment(e.updatedAt).format(\"DD-MM-YYYY\"),\n      });\n      id++;\n    });\n  };\n\n  rows();\n  const reactTableData = { tableHeaderData: columns, tableRowsData: data };\n  return reactTableData;\n};\n\nexport default CreateTableData;\n","import { categoriesUrl } from \"../../utility/api\";\nimport { authGet } from \"../../utility/request\";\nexport const LIST_CATEGORY_SUCCESS = \"LIST_CATEGORY_SUCCESS\";\nexport const LIST_CATEGORY_FAIL = \"LIST_CATEGORY_FAIL\";\nexport const LIST_CATEGORY_START = \"LIST_CATEGORY_START\";\n\nconst fetchCategorySatrt = () => {\n  return {\n    type: LIST_CATEGORY_START,\n  };\n};\n\nconst fetchCategoryFail = (err) => {\n  return {\n    type: LIST_CATEGORY_FAIL,\n    payload: err.toString(),\n  };\n};\n\nconst fetchCategorySuccess = (data) => {\n  return {\n    type: LIST_CATEGORY_SUCCESS,\n    payload: data,\n  };\n};\n\nexport const fetchCategory = (token) => async (dispatch) => {\n  dispatch(fetchCategorySatrt());\n  try {\n    const response = await authGet(categoriesUrl, token);\n    if (response.data.success) {\n      dispatch(fetchCategorySuccess(response.data.data));\n    } else {\n      dispatch(fetchCategoryFail(response.data.message));\n    }\n  } catch (err) {\n    dispatch(fetchCategoryFail(\"Something went wrong\"));\n  }\n};\n","import React, { useEffect } from \"react\";\nimport { Col, Container, Row } from \"reactstrap\";\nimport DataReactTable from \"../../component/table/tableBase\";\nimport CreateTableData from \"./component/createData\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchCategory } from \"../../redux/actions/category\";\nconst Categories = () => {\n  const {\n    user: { token },\n  } = useSelector((state) => state.user);\n\n  const { loading, listCategory, error } = useSelector(\n    (state) => state.category\n  );\n  let reactTableData = CreateTableData();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchCategory(token));\n  }, []);\n  return (\n    <Container>\n      <Row>\n        <Col md={12}>\n          <h3 className=\"page-title\">Categories</h3>\n          <h3 className=\"page-subhead subhead\">List Of Categories</h3>\n        </Col>\n      </Row>\n      <Row>\n        {error ? (\n          <p>{error}</p>\n        ) : listCategory && !loading ? (\n          <DataReactTable reactTableData={reactTableData} />\n        ) : (\n          <p>Loading...</p>\n        )}\n      </Row>\n    </Container>\n  );\n};\n\nexport default Categories;\n","import React from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport PropTypes from \"prop-types\";\n\nconst DropZoneField = ({ value, customHeight, name, onChange }) => {\n  const files = value;\n  const onDrop = (file) => {\n    onChange(\n      file.map((fl) =>\n        Object.assign(fl, {\n          preview: URL.createObjectURL(fl),\n        })\n      )\n    );\n  };\n  const removeFile = (index, e) => {\n    e.preventDefault();\n    onChange(value.filter((val, i) => i !== index));\n  };\n\n  return (\n    <div\n      style={{ height: \"100px\", overflow: \"hidden\" }}\n      className={`dropzone dropzone--single${\n        customHeight ? \" dropzone--custom-height\" : \"\"\n      }`}\n    >\n      <Dropzone\n        accept=\"image/jpeg, image/png\"\n        name={name}\n        multiple={false}\n        onDrop={(fileToUpload) => {\n          onDrop(fileToUpload);\n        }}\n      >\n        {({ getRootProps, getInputProps }) => (\n          <div {...getRootProps()} className=\"dropzone__input\">\n            {(!files || files.length === 0) && (\n              <div className=\"dropzone__drop-here\">\n                <span className=\"lnr lnr-upload\" /> Drop file here to upload\n              </div>\n            )}\n            <input {...getInputProps()} />\n          </div>\n        )}\n      </Dropzone>\n      {files && Array.isArray(files) && files.length > 0 && (\n        <aside className=\"dropzone__img\">\n          <img src={files[0].preview} alt=\"drop-img\" />\n          <p className=\"dropzone__img-name\">{files[0].name}</p>\n          <button\n            className=\"dropzone__img-delete\"\n            type=\"button\"\n            onClick={(e) => removeFile(0, e)}\n          >\n            Remove\n          </button>\n        </aside>\n      )}\n    </div>\n  );\n};\n\nDropZoneField.propTypes = {\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  customHeight: PropTypes.bool,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string,\n      })\n    ),\n  ]).isRequired,\n};\n\nDropZoneField.defaultProps = {\n  customHeight: false,\n};\n\nconst renderDropZoneField = ({ input, customHeight }) => (\n  <DropZoneField {...input} customHeight={customHeight} />\n);\n\nrenderDropZoneField.propTypes = {\n  input: PropTypes.shape({\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n  }).isRequired,\n  customHeight: PropTypes.bool,\n};\n\nrenderDropZoneField.defaultProps = {\n  customHeight: false,\n};\n\nexport default renderDropZoneField;\n","import React from \"react\";\nimport { Button, ButtonToolbar, Col } from \"reactstrap\";\nimport { Field, reduxForm } from \"redux-form\";\nimport renderDropZoneField from \"../../../shared/form/DropZone\";\n// import renderDropZone from \"../../../shared/form/DropZone\";\n\nconst AddMainCategoryForm = ({ handleSubmit, reset }) => {\n  return (\n    <form className=\"form product-edit px-5\" onSubmit={handleSubmit}>\n      <div className=\"form form--horizontal\">\n        <div className=\"form__form-group\">\n          <span className=\"form__form-group-label\">Category Name</span>\n          <div className=\"form__form-group-field\">\n            <Field name=\"name\" component=\"input\" type=\"text\" />\n          </div>\n        </div>\n        <Col md={12}>\n          <div className=\"form__form-group\">\n            <span className=\"form__form-group-label\">Upload photo</span>\n            <div className=\"form__form-group-field\">\n              <Field name=\"files\" component={renderDropZoneField} />\n            </div>\n          </div>\n        </Col>\n\n        <ButtonToolbar className=\"form__button-toolbar\">\n          <Button className=\"btn-block\" color=\"primary\" type=\"submit\">\n            Save\n          </Button>\n        </ButtonToolbar>\n      </div>\n      {/* </div> */}\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: \"product_edit_form\", // a unique identifier for this form\n})(AddMainCategoryForm);\n","import React from \"react\";\nimport { Button, ButtonToolbar, Col } from \"reactstrap\";\nimport { Field, reduxForm } from \"redux-form\";\n// import { TextField } from \"@material-ui/core\";\nimport renderDropZoneField from \"../../../shared/form/DropZone\";\nimport { useSelector } from \"react-redux\";\n\n// const renderTextField = ({\n//   input,\n//   label,\n//   meta: { touched, error },\n//   children,\n//   select,\n// }) => (\n//   <TextField\n//     className=\"material-form__field\"\n//     label={label}\n//     error={touched && error}\n//     value={input.value}\n//     children={children}\n//     select={select}\n//     onChange={(e) => {\n//       e.preventDefault();\n//       input.onChange(e.target.value);\n//     }}\n//   />\n// );\nconst AddSubCategory = ({ handleSubmit, reset }) => {\n  const { categories, loading } = useSelector((state) => state.category);\n  const mainCategory = categories.filter((x) => x.type === 1);\n  return (\n    <form className=\"form product-edit px-5\" onSubmit={handleSubmit}>\n      <div className=\"form form--horizontal\">\n        <div className=\"form__form-group\">\n          <span className=\"form__form-group-label\">Category Name</span>\n          <div className=\"form__form-group-field\">\n            <Field name=\"name\" component=\"input\" type=\"text\" />\n          </div>\n        </div>\n        <Col md={12}>\n          <div className=\"form__form-group\">\n            <span className=\"form__form-group-label\">Upload photo</span>\n            <div className=\"form__form-group-field\">\n              <Field name=\"files\" component={renderDropZoneField} />\n            </div>\n          </div>\n        </Col>\n        <Col md={12}>\n          <div className=\"form__form-group\">\n            <span className=\"material-form__label\">Main Category</span>\n            <div className=\"form__form-group-field\">\n              <Field\n                name=\"favoriteColor\"\n                className=\"form-control form-control-lg\"\n                component=\"select\"\n              >\n                {mainCategory.map((e) => (\n                  <option key={e._id} value={e._id}>\n                    {e.title}\n                  </option>\n                ))}\n              </Field>\n            </div>\n          </div>\n        </Col>\n        <ButtonToolbar className=\"form__button-toolbar\">\n          <Button className=\"btn-block\" color=\"primary\" type=\"submit\">\n            Save\n          </Button>\n        </ButtonToolbar>\n      </div>\n      {/* </div> */}\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: \"sub_category\", // a unique identifier for this form\n})(AddSubCategory);\n","import React, { useState } from \"react\";\nimport { Button, ButtonToolbar, Col } from \"reactstrap\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { MenuItem, TextField } from \"@material-ui/core\";\nimport renderDropZoneField from \"../../../shared/form/DropZone\";\nimport { useSelector } from \"react-redux\";\n\nconst renderTextField = ({\n  input,\n  label,\n  meta: { touched, error },\n  children,\n  select,\n}) => (\n  <TextField\n    className=\"material-form__field\"\n    label={label}\n    error={touched && error}\n    value={input.value}\n    children={children}\n    select={select}\n    onChange={(e) => {\n      e.preventDefault();\n      input.onChange(e.target.value);\n    }}\n  />\n);\nconst AddChildCategory = ({ handleSubmit, reset }) => {\n  const { categories, loading } = useSelector((state) => state.category);\n  const mainCategory = categories.filter((x) => x.type === 1);\n  const subCategory = categories.filter((x) => x.type === 2);\n\n  console.log(mainCategory);\n  return (\n    <form className=\"form product-edit px-5\" onSubmit={handleSubmit}>\n      <div className=\"form form--horizontal\">\n        <div className=\"form__form-group\">\n          <span className=\"form__form-group-label\">Category Name</span>\n          <div className=\"form__form-group-field\">\n            <Field name=\"name\" component=\"input\" type=\"text\" />\n          </div>\n        </div>\n        <Col md={12}>\n          <div className=\"form__form-group\">\n            <span className=\"form__form-group-label\">Upload photo</span>\n            <div className=\"form__form-group-field\">\n              <Field name=\"files\" component={renderDropZoneField} />\n            </div>\n          </div>\n        </Col>\n        <Col md={12}>\n          <div className=\"form__form-group\">\n            <span className=\"material-form__label\">Main Category</span>\n            <div className=\"form__form-group-field\">\n              <Field\n                name=\"favoriteColor\"\n                className=\"form-control form-control-lg\"\n                component=\"select\"\n              >\n                {mainCategory.map((e) => (\n                  <option key={e._id} value={e._id}>\n                    {e.title}\n                  </option>\n                ))}\n              </Field>\n            </div>\n          </div>\n        </Col>\n\n        <Col md={12}>\n          <div className=\"form__form-group\">\n            <span className=\"material-form__label\">Sub Category</span>\n            <div className=\"form__form-group-field\">\n              <Field\n                name=\"favoriteColor\"\n                className=\"form-control form-control-lg\"\n                component=\"select\"\n              >\n                {subCategory.map((e) => (\n                  <option key={e._id} value={e._id}>\n                    {e.title}\n                  </option>\n                ))}\n              </Field>\n            </div>\n          </div>\n        </Col>\n        <ButtonToolbar className=\"form__button-toolbar\">\n          <Button className=\"btn-block\" color=\"primary\" type=\"submit\">\n            Save\n          </Button>\n        </ButtonToolbar>\n      </div>\n      {/* </div> */}\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: \"child_category\", // a unique identifier for this form\n})(AddChildCategory);\n","import React, { useEffect } from \"react\";\nimport { Col, Container, Row, Card, CardBody, CardHeader } from \"reactstrap\";\nimport CreateTableData from \"./component/createData\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchCategory } from \"../../redux/actions/category\";\nimport AddMainCategory from \"./component/addMainCategory\";\nimport AddSubCategory from \"./component/addSubCategory\";\nimport AddChildCategory from \"./component/addChildCategory\";\nconst AddCategorie = () => {\n  const {\n    user: { token },\n  } = useSelector((state) => state.user);\n\n  const { loading, listCategory, error } = useSelector(\n    (state) => state.category\n  );\n  let reactTableData = CreateTableData();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!listCategory) dispatch(fetchCategory(token));\n  }, []);\n  return (\n    <Container>\n      <Row>\n        <Col md={12}>\n          <h3 className=\"page-title\">Add Categories</h3>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Card>\n            <h3 className=\"page-subhead subhead\">Add Main Category</h3>\n            <CardBody>\n              <AddMainCategory />\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <Card>\n            {/* <CardHeader> */}\n            <h3 className=\"page-subhead subhead\">Add Sub Category</h3>\n            {/* </CardHeader> */}\n\n            <CardBody>\n              <AddSubCategory />\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col>\n          <Card>\n            {/* <CardHeader> */}\n            <h3 className=\"page-subhead subhead\">Add Child Category</h3>\n            {/* </CardHeader> */}\n\n            <CardBody>\n              <AddChildCategory />\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default AddCategorie;\n","import { useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport moment from \"moment\";\nconst CreateTableData = () => {\n  // const NumberFormater = (value) => <span>{value}</span>;\n  const { orders } = useSelector((state) => state.order);\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"#\",\n        accessor: \"id\",\n        disableGlobalFilter: true,\n        width: 65,\n      },\n      {\n        Header: \"name\",\n        accessor: \"name\",\n      },\n      {\n        Header: \"email\",\n        accessor: \"email\",\n      },\n\n      {\n        Header: \"Address\",\n        accessor: \"address\",\n      },\n      { Header: \"Postal Code\", accessor: \"postalcode\" },\n      { Header: \"Total Items\", accessor: \"totalItems\" },\n      { Header: \"Total Quantity\", accessor: \"totalQuantity\" },\n      { Header: \"Total Cost\", accessor: \"totalCost\" },\n      { Header: \"User\", accessor: \"user\" },\n      { Header: \"Order Date\", accessor: \"orderDate\" },\n    ],\n    []\n  );\n\n  const data = [];\n  let id = 0;\n  const rows = () => {\n    orders.forEach((e) => {\n      data.push({\n        id: id,\n        postalcode: e.shippingAddress.postalCode.toString(),\n        email: e.shippingAddress.email,\n        address: e.shippingAddress.address,\n        totalItems: e.totalProducts.toString(),\n        name: e.shippingAddress.name,\n        totalQuantity: e.totalQuantity.toString(),\n        totalCost: e.totalCost.toString(),\n        user: e.user,\n        orderDate: moment(e.orderedData).format(\"DD-MM-YYYY\"),\n      });\n      id++;\n    });\n  };\n\n  rows();\n  const reactTableData = { tableHeaderData: columns, tableRowsData: data };\n  return reactTableData;\n};\n\nexport default CreateTableData;\n","import { listOrderUrl } from \"../../utility/api\";\nimport { authGet } from \"../../utility/request\";\nimport { FETCH_PRODUCT_START } from \"./product\";\n\nexport const FETCH_ORDER_SATRT = \"FETCH_ORDER_SATRT\";\nexport const FETCH_ORDER_SUCCESS = \"FETCH_ORDER_SUCCESS\";\nexport const FETCH_ORDER_FAIL = \"FETCH_ORDER_FAIL\";\n\nconst fetchOrderStart = () => {\n  return {\n    type: FETCH_ORDER_SATRT,\n  };\n};\n\nconst fetchOrderSuccess = (data) => {\n  return {\n    type: FETCH_ORDER_SUCCESS,\n    payload: data,\n  };\n};\n\nconst fethcOrderFail = (err) => {\n  return {\n    type: FETCH_ORDER_FAIL,\n    payload: err,\n  };\n};\n\nexport const fetchOrder = (token) => async (dispatch) => {\n  dispatch(fetchOrderStart());\n  try {\n    const response = await authGet(listOrderUrl, token);\n    if (response.data.success) {\n      dispatch(fetchOrderSuccess(response.data.data));\n    } else {\n      dispatch(fethcOrderFail(response.data.message));\n    }\n  } catch (err) {\n    dispatch(fethcOrderFail(err.toString()));\n  }\n};\n","import React, { useEffect } from \"react\";\nimport { Col, Container, Row } from \"reactstrap\";\nimport DataReactTable from \"../../component/table/tableBase\";\nimport CreateTableData from \"./component/createData\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchOrder } from \"../../redux/actions/order\";\n\nconst Orders = () => {\n  const dispatch = useDispatch();\n  const {\n    user: { token },\n  } = useSelector((state) => state.user);\n  const { loading, error, listOrder } = useSelector((state) => state.order);\n  const reactTableData = CreateTableData();\n  useEffect(() => {\n    if (!listOrder) {\n      dispatch(fetchOrder(token));\n    }\n  }, [dispatch, listOrder, token]);\n  return (\n    <Container>\n      <Row>\n        <Col md={12}>\n          <h3 className=\"page-title\">Orders</h3>\n          {/* <h3 className=\"page-subhead subhead\"></h3> */}\n        </Col>\n      </Row>\n      <Row>\n        {loading ? (\n          <p>loading...</p>\n        ) : error ? (\n          <p>{error}</p>\n        ) : (\n          <DataReactTable reactTableData={reactTableData} />\n        )}\n      </Row>\n    </Container>\n  );\n};\n\nexport default Orders;\n","import { useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport ActionFormater from \"../../../component/alert/actionFormaterProduct\";\n\nconst CreateTableData = () => {\n  // const NumberFormater = (value) => <span>{value}</span>;\n  const { vendors } = useSelector((state) => state.vendor);\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"#\",\n        accessor: \"id\",\n        disableGlobalFilter: true,\n        width: 65,\n      },\n      {\n        Header: \"name\",\n        accessor: \"name\",\n      },\n      {\n        Header: \"email\",\n        accessor: \"email\",\n      },\n      {\n        Header: \"phone\",\n        accessor: \"phone\",\n      },\n\n      {\n        Header: \"Address\",\n        accessor: \"address\",\n      },\n      { Header: \"product count\", accessor: \"productCount\" },\n      {\n        Header: \"Action\",\n        accessor: \"action\",\n        disableGlobalFilter: true,\n        disableSortBy: true,\n        width: 110,\n      },\n      { Header: \"Created At\", accessor: \"createdAt\" },\n    ],\n    []\n  );\n\n  const data = [];\n  let id = 0;\n  const rows = () => {\n    vendors.forEach((e) => {\n      data.push({\n        id: id,\n        email: e.email,\n        address: e.profileDetails.address,\n        name: e.profileDetails.name,\n        phone: e.profileDetails.phone,\n\n        productCount: e.products.length.toString(),\n        createdAt: moment(e.createdAt).format(\"DD-MM-YYYY\"),\n        action: [ActionFormater(() => () => {}, \"ad\", 2)],\n      });\n      id++;\n    });\n  };\n\n  rows();\n  const reactTableData = { tableHeaderData: columns, tableRowsData: data };\n  return reactTableData;\n};\n\nexport default CreateTableData;\n","import { listVendorApi } from \"../../utility/api\";\nimport { authGet } from \"../../utility/request\";\n\nexport const FETCH_VENDOR_START = \"FETCH_VENDOR_START\";\nexport const FETCH_VENDOR_SUCCESS = \"FETCH_VENDOR_SUCCESS\";\nexport const FETCH_VENDOR_FAIL = \"FETCH_VENDOR_FAIL\";\n\nconst fetchVendorStart = () => {\n  return {\n    type: FETCH_VENDOR_START,\n  };\n};\nconst fetchVendorSuccess = (data) => {\n  return {\n    type: FETCH_VENDOR_SUCCESS,\n    payload: data,\n  };\n};\n\nconst fetchVendorFail = (err) => {\n  return {\n    type: FETCH_VENDOR_FAIL,\n    payload: err,\n  };\n};\n\nexport const fetchVendor = (token) => async (dispatch) => {\n  dispatch(fetchVendorStart());\n  try {\n    const response = await authGet(listVendorApi, token);\n    if (response.data.success) {\n      dispatch(fetchVendorSuccess(response.data.data));\n    } else {\n      dispatch(fetchVendorFail(response.data.message));\n    }\n  } catch (err) {\n    dispatch(fetchVendorFail(err));\n  }\n};\n","import React, { useEffect } from \"react\";\nimport { Col, Container, Row } from \"reactstrap\";\nimport DataReactTable from \"../../component/table/tableBase\";\nimport CreateTableData from \"./component/createData\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchVendor } from \"../../redux/actions/vendors\";\n\nconst Vendors = () => {\n  const dispatch = useDispatch();\n  const {\n    user: { token },\n  } = useSelector((state) => state.user);\n  const { loading, error, listVendor } = useSelector((state) => state.vendor);\n  const reactTableData = CreateTableData();\n  useEffect(() => {\n    if (!listVendor) {\n      dispatch(fetchVendor(token));\n    }\n  }, [dispatch, listVendor, token]);\n  return (\n    <Container>\n      <Row>\n        <Col md={12}>\n          <h3 className=\"page-title\">Vendors</h3>\n          {/* <h3 className=\"page-subhead subhead\"></h3> */}\n        </Col>\n      </Row>\n      <Row>\n        {loading ? (\n          <p>loading...</p>\n        ) : error ? (\n          <p>{error}</p>\n        ) : (\n          <DataReactTable reactTableData={reactTableData} />\n        )}\n      </Row>\n    </Container>\n  );\n};\n\nexport default Vendors;\n","import React from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport PropTypes from \"prop-types\";\n\nconst DropZoneMultipleField = ({ name, value, onChange }) => {\n  const files = value;\n  const onDrop = (onDropFiles) => {\n    onChange(\n      onDropFiles.map((fl) =>\n        Object.assign(fl, {\n          preview: URL.createObjectURL(fl),\n        })\n      )\n    );\n  };\n  const removeFile = (index, e) => {\n    e.preventDefault();\n    onChange(value.filter((val, i) => i !== index));\n  };\n\n  return (\n    <div className=\"dropzone dropzone--multiple\">\n      <Dropzone\n        className=\"dropzone__input\"\n        accept=\"image/jpeg, image/png\"\n        name={name}\n        onDrop={(filesToUpload) => {\n          onDrop(value ? value.concat(filesToUpload) : filesToUpload);\n        }}\n      >\n        {({ getRootProps, getInputProps }) => (\n          <div {...getRootProps()} className=\"dropzone__input\">\n            {(!files || files.length === 0) && (\n              <div className=\"dropzone__drop-here\">\n                <span className=\"lnr lnr-upload\" /> Drop file here to upload\n              </div>\n            )}\n            <input {...getInputProps()} />\n          </div>\n        )}\n      </Dropzone>\n      {files && Array.isArray(files) && (\n        <div className=\"dropzone__imgs-wrapper\">\n          {files.map((file, i) => (\n            <div\n              className=\"dropzone__img\"\n              key={file.i}\n              style={{ backgroundImage: `url(${file.preview})` }}\n            >\n              <p className=\"dropzone__img-name\">{file.name}</p>\n              <button\n                className=\"dropzone__img-delete\"\n                type=\"button\"\n                onClick={(e) => removeFile(i, e)}\n              >\n                Remove\n              </button>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nDropZoneMultipleField.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string,\n        files: PropTypes.string,\n      })\n    ),\n  ]).isRequired,\n};\n\nconst renderDropZoneMultipleField = ({ input }) => (\n  <DropZoneMultipleField {...input} />\n);\n\nrenderDropZoneMultipleField.propTypes = {\n  input: PropTypes.shape({\n    onChange: PropTypes.func,\n    name: PropTypes.string,\n  }).isRequired,\n};\n\nexport default renderDropZoneMultipleField;\n","import React from 'react';\nimport Select from 'react-select';\nimport PropTypes from 'prop-types';\n\nexport const SelectField = ({\n  onChange, value, name, placeholder, options,\n}) => {\n  const handleChange = (selectedOption) => {\n    onChange(selectedOption);\n  };\n\n  return (\n    <Select\n      name={name}\n      value={value}\n      onChange={handleChange}\n      options={options}\n      clearable={false}\n      className=\"react-select\"\n      placeholder={placeholder}\n      classNamePrefix=\"react-select\"\n    />\n  );\n};\n\nSelectField.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.string,\n    label: PropTypes.string,\n  })),\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      value: PropTypes.string,\n      label: PropTypes.string,\n    }),\n  ]).isRequired,\n};\n\nSelectField.defaultProps = {\n  placeholder: '',\n  options: [],\n};\n\nconst renderSelectField = ({\n  input, meta, options, placeholder, className,\n}) => (\n  <div className={`form__form-group-input-wrap ${className}`}>\n    <SelectField\n      {...input}\n      options={options}\n      placeholder={placeholder}\n    />\n    {meta.touched && meta.error && <span className=\"form__form-group-error\">{meta.error}</span>}\n  </div>\n);\n\nrenderSelectField.propTypes = {\n  input: PropTypes.shape({\n    onChange: PropTypes.func,\n    name: PropTypes.string,\n  }).isRequired,\n  meta: PropTypes.shape({\n    touched: PropTypes.bool,\n    error: PropTypes.string,\n  }),\n  options: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.string,\n    label: PropTypes.string,\n  })),\n  placeholder: PropTypes.string,\n  className: PropTypes.string,\n};\n\nrenderSelectField.defaultProps = {\n  meta: null,\n  options: [],\n  placeholder: '',\n  className: '',\n};\n\nexport default renderSelectField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, ButtonToolbar } from \"reactstrap\";\nimport { Field, reduxForm } from \"redux-form\";\nimport CurrencyUsdIcon from \"mdi-react/CurrencyUsdIcon\";\nimport TagIcon from \"mdi-react/TagIcon\";\nimport renderDropZoneMultipleField from \"../../../shared/form/DropZoneMultiple\";\nimport renderSelectField from \"../../../shared/form/Select\";\n\nconst ProductEditForm = ({ handleSubmit, reset }) => (\n  <form className=\"form product-edit\" onSubmit={handleSubmit}>\n    <div className=\"form__half\">\n      <div className=\"form__form-group\">\n        <span className=\"form__form-group-label\">Product Name</span>\n        <div className=\"form__form-group-field\">\n          <Field name=\"name\" component=\"input\" type=\"text\" />\n        </div>\n      </div>\n      <div className=\"form__form-group-id-category\">\n        <div className=\"form__form-group form__form-group-id\">\n          <span className=\"form__form-group-label\">ID</span>\n          <div className=\"form__form-group-field\">\n            <Field name=\"id\" component=\"input\" type=\"text\" />\n          </div>\n        </div>\n        <div className=\"form__form-group\">\n          <span className=\"form__form-group-label\">Category</span>\n          <div className=\"form__form-group-field\">\n            <Field\n              name=\"category\"\n              component={renderSelectField}\n              type=\"text\"\n              options={[\n                { value: \"one\", label: \"One\" },\n                { value: \"two\", label: \"Two\" },\n              ]}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"form__form-group\">\n        <span className=\"form__form-group-label\">\n          Short description <span dir=\"ltr\">(300 characters max)</span>\n        </span>\n        <div className=\"form__form-group-field\">\n          <Field name=\"short_description\" component=\"input\" type=\"text\" />\n        </div>\n      </div>\n      <div className=\"form__form-group\">\n        <span className=\"form__form-group-label\">Full description</span>\n        <div className=\"form__form-group-field\">\n          <Field name=\"full_description\" component=\"textarea\" type=\"text\" />\n        </div>\n      </div>\n\n      <div className=\"card__title\">\n        <h5 className=\"bold-text\">Pricing</h5>\n      </div>\n      <div className=\"form__form-group-price-discount\">\n        <div className=\"form__form-group form__form-group-price\">\n          <span className=\"form__form-group-label\">Price</span>\n          <div className=\"form__form-group-field\">\n            <div className=\"form__form-group-icon\">\n              <CurrencyUsdIcon />\n            </div>\n            <Field name=\"price\" component=\"input\" type=\"text\" />\n          </div>\n        </div>\n        <div className=\"form__form-group\">\n          <span className=\"form__form-group-label\">Discount</span>\n          <div className=\"form__form-group-field\">\n            <div className=\"form__form-group-icon\">\n              <TagIcon />\n            </div>\n            <Field name=\"discount\" component=\"input\" type=\"text\" />\n          </div>\n        </div>\n      </div>\n\n      <div className=\"card__title\">\n        <h5 className=\"bold-text\">General information</h5>\n      </div>\n      <div className=\"form form--horizontal\">\n        <div className=\"form__form-group\">\n          <span className=\"form__form-group-label\">Brand Name</span>\n          <div className=\"form__form-group-field\">\n            <Field name=\"brand\" component=\"input\" type=\"text\" />\n          </div>\n        </div>\n        <div className=\"form__form-group\">\n          <span className=\"form__form-group-label\">Category</span>\n          <div className=\"form__form-group-field\">\n            <Field name=\"general_category\" component=\"input\" type=\"text\" />\n          </div>\n        </div>\n        <div className=\"form__form-group\">\n          <span className=\"form__form-group-label\">Delivery Condition</span>\n          <div className=\"form__form-group-field\">\n            <Field name=\"delivery\" component=\"input\" type=\"text\" />\n          </div>\n        </div>\n        <div className=\"form__form-group\">\n          <span className=\"form__form-group-label\">Weight</span>\n          <div className=\"form__form-group-field\">\n            <Field name=\"weight\" component=\"input\" type=\"text\" />\n          </div>\n        </div>\n        <div className=\"form__form-group\">\n          <span className=\"form__form-group-label\">Size</span>\n          <div className=\"form__form-group-field\">\n            <Field name=\"size\" component=\"input\" type=\"text\" />\n          </div>\n        </div>\n      </div>\n    </div>\n    <div className=\"form__half\">\n      <div className=\"form__form-group\">\n        <span className=\"form__form-group-label\">Upload photo</span>\n        <div className=\"form__form-group-field\">\n          <Field name=\"files\" component={renderDropZoneMultipleField} />\n        </div>\n      </div>\n    </div>\n    <ButtonToolbar className=\"form__button-toolbar\">\n      <Button color=\"primary\" type=\"submit\">\n        Save\n      </Button>\n      <Button type=\"button\" onClick={reset}>\n        Cancel\n      </Button>\n    </ButtonToolbar>\n  </form>\n);\n\nProductEditForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  reset: PropTypes.func.isRequired,\n};\n\nexport default reduxForm({\n  form: \"product_edit_form\", // a unique identifier for this form\n})(ProductEditForm);\n","import React from 'react';\nimport { Card, CardBody, Col } from 'reactstrap';\nimport ProductEditForm from './ProductEditForm';\n\nconst PaymentCard = () => (\n  <Col md={12} lg={12}>\n    <Card>\n      <CardBody>\n        <div className=\"card__title\">\n          <h5 className=\"bold-text\">Main Information</h5>\n        </div>\n        <ProductEditForm onSubmit />\n      </CardBody>\n    </Card>\n  </Col>\n);\n\nexport default PaymentCard;\n","import React from 'react';\nimport { Col, Container, Row } from 'reactstrap';\nimport ProductEditCard from './components/ProductEditCard';\n\nconst ProductEdit = () => (\n  <Container>\n    <Row>\n      <Col md={12}>\n        <h3 className=\"page-title\">Product Edit</h3>\n        <h3 className=\"page-subhead subhead\">Use this elements, if you want to show some hints or additional\n          information\n        </h3>\n      </Col>\n    </Row>\n    <Row>\n      <ProductEditCard />\n    </Row>\n  </Container>\n);\n\nexport default ProductEdit;\n","import React, { useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport { baseUrl } from \"../../../utility/api\";\nimport StatusFormatter from \"../../../component/alert/statusFormater\";\n\nconst CreateTableData = () => {\n  const { users } = useSelector((state) => state.users);\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"#\",\n        accessor: \"id\",\n        disableGlobalFilter: true,\n        width: 65,\n      },\n      {\n        Header: \"Image\",\n        accessor: \"image\",\n        disableGlobalFilter: true,\n        disableSortBy: true,\n      },\n      {\n        Header: \"First Name\",\n        accessor: \"firstname\",\n      },\n      {\n        Header: \"last Name\",\n        accessor: \"lastname\",\n        disableGlobalFilter: true,\n      },\n      {\n        Header: \"Phone\",\n        accessor: \"phone\",\n        disableGlobalFilter: true,\n        width: 70,\n      },\n      {\n        Header: \"Address\",\n        accessor: \"address\",\n        disableGlobalFilter: true,\n      },\n      {\n        Header: \"Email\",\n        accessor: \"email\",\n        disableGlobalFilter: true,\n      },\n\n      {\n        Header: \"Status\",\n        accessor: \"status\",\n        formatter: StatusFormatter,\n        disableGlobalFilter: true,\n        disableSortBy: true,\n      },\n      // {\n      //   Header: \"Action\",\n      //   accessor: \"action\",\n      //   disableGlobalFilter: true,\n      //   disableSortBy: true,\n      //   width: 110,\n      // },\n      {\n        Header: \"CreatedAt\",\n        accessor: \"createdAt\",\n        disableGlobalFilter: true,\n      },\n      {\n        Header: \"UpdatedAt\",\n        accessor: \"updatedAt\",\n        disableGlobalFilter: true,\n        disableSortBy: true,\n      },\n    ],\n    []\n  );\n\n  const PhotoFormatter = (value) => (\n    <div className=\"products-list__img-wrap\">\n      <img height=\"70px\" width=\"50px\" src={baseUrl + \"/\" + value} alt=\"\" />\n    </div>\n  );\n\n  // const getImage = (img, alt) => <img src={`${baseUrl}${img}`} alt={alt} />;\n  let id = 0;\n  const data = [];\n  const rows = () => {\n    users.forEach((e) => {\n      data.push({\n        id,\n        firstname: e.profileDetails.firstname,\n        image: PhotoFormatter(e.profileDetails.profilePicture),\n        lastname: e.profileDetails.lastname,\n        phone: e.profileDetails.phone,\n        address: e.profileDetails.address,\n        email: e.email,\n        status: StatusFormatter(e.accountStatus),\n        // action: [ActionFormater(e._id, \"ad\", e.status)],\n        updatedAt: moment(e.updatedAt).format(\"DD-MM-YYYY\"),\n        createdAt: moment(e.createdAt).format(\"DD-MM-YYYY\"),\n      });\n      id++;\n    });\n  };\n\n  rows();\n  const reactTableData = { tableHeaderData: columns, tableRowsData: data };\n  return reactTableData;\n};\n\nexport default CreateTableData;\n","import { listUsersApi } from \"../../utility/api\";\nimport { authGet } from \"../../utility/request\";\n\nexport const LIST_USERS_START = \"LIST_USERS_START\";\nexport const LIST_USERS_SUCCESS = \"LIST_USERS_SUCCESS\";\nexport const LIST_USERS_FAIL = \"LIST_USERS_FAIL\";\n\nconst listUserStart = () => {\n  return {\n    type: LIST_USERS_START,\n  };\n};\n\nconst listUserSuccess = (data) => {\n  return {\n    type: LIST_USERS_SUCCESS,\n    payload: data,\n  };\n};\n\nconst listUserFail = (err) => {\n  return {\n    type: LIST_USERS_FAIL,\n    payload: err,\n  };\n};\n\nexport const fetchUsers = (token) => async (dispatch) => {\n  dispatch(listUserStart());\n  try {\n    const response = await authGet(listUsersApi, token);\n    if (response.data.success) {\n      dispatch(listUserSuccess(response.data.data));\n    } else {\n      dispatch(listUserFail(response.data.message));\n    }\n  } catch (err) {\n    dispatch(listUserFail(err.toString()));\n  }\n};\n","import React, { useEffect } from \"react\";\nimport { Col, Container, Row } from \"reactstrap\";\nimport DataReactTable from \"../../component/table/tableBase\";\nimport CreateTableData from \"./component/createData\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchUsers } from \"../../redux/actions/users\";\n\nconst Users = () => {\n  const dispatch = useDispatch();\n  const {\n    user: { token },\n  } = useSelector((state) => state.user);\n  const { loading, error, listUsers } = useSelector((state) => state.users);\n  const reactTableData = CreateTableData();\n  useEffect(() => {\n    if (!listUsers) {\n      dispatch(fetchUsers(token));\n    }\n  }, [listUsers, token, dispatch]);\n  return (\n    <Container>\n      <Row>\n        <Col md={12}>\n          <h3 className=\"page-title\">Users</h3>\n          {/* <h3 className=\"page-subhead subhead\"></h3> */}\n        </Col>\n      </Row>\n      <Row>\n        {loading ? (\n          <p>loading...</p>\n        ) : error ? (\n          <p>{error}</p>\n        ) : (\n          <DataReactTable reactTableData={reactTableData} />\n        )}\n      </Row>\n    </Container>\n  );\n};\n\nexport default Users;\n","import React, { useMemo, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport moment from \"moment\";\nimport {\n  approveProductApi,\n  baseUrl,\n  suspendProductApi,\n} from \"../../../utility/api\";\nimport StatusFormatter from \"../../../component/alert/statusFormater\";\nimport ActionFormater from \"../../../component/alert/actionFormaterProduct\";\nimport { authGet } from \"../../../utility/request\";\nimport { approveProduct } from \"../../../redux/actions/product\";\n\nconst CreateTableData = () => {\n  const dispatch = useDispatch();\n  const [actionChange, setactionChange] = useState({});\n\n  const { enquaries } = useSelector((state) => state.enquary);\n  const {\n    user: { token },\n  } = useSelector((state) => state.user);\n\n  // const unSuspend = async (produId) => {\n  //   setactionChange({\n  //     loading: true,\n  //     prodId: produId,\n  //   });\n  //   try {\n  //     const response = await authGet(approveProductApi(produId), token);\n  //     if (response.data.success) {\n  //       dispatch(approveProduct(produId, 1));\n  //     } else {\n  //       dispatch(approveProduct(produId, 2));\n  //     }\n  //   } catch (err) {\n  //     dispatch(approveProduct(produId, 2));\n  //   }\n  // };\n  // const suspend = async (produId) => {\n  //   setactionChange({\n  //     loading: true,\n  //     prodId: produId,\n  //   });\n  //   try {\n  //     const response = await authGet(suspendProductApi(produId), token);\n  //     if (response.data.success) {\n  //     } else {\n  //     }\n  //   } catch (err) {}\n  // };\n\n  // const clickAction = (produId) => {\n  //   const product = products.find((e) => e._id === produId);\n  //   if (product.status === 2) {\n  //     suspend(produId);\n  //   } else {\n  //     unSuspend(produId);\n  //   }\n  // };\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"#\",\n        accessor: \"id\",\n        disableGlobalFilter: true,\n        width: 65,\n      },\n      {\n        Header: \"First Name\",\n        accessor: \"firstname\",\n        disableGlobalFilter: true,\n        disableSortBy: true,\n      },\n      {\n        Header: \"Last Name\",\n        accessor: \"lastname\",\n      },\n      {\n        Header: \"Email\",\n        accessor: \"email\",\n        disableGlobalFilter: true,\n      },\n      {\n        Header: \"Contact\",\n        accessor: \"contact\",\n        disableGlobalFilter: true,\n        width: 70,\n      },\n      {\n        Header: \"Product\",\n        accessor: \"product\",\n        disableGlobalFilter: true,\n      },\n      {\n        Header: \"Product Description\",\n        accessor: \"productDescription\",\n        disableGlobalFilter: true,\n      },\n      {\n        Header: \"Enquary\",\n        accessor: \"enquiry\",\n        width: 50,\n      },\n      {\n        Header: \"Image\",\n        accessor: \"image\",\n        disableGlobalFilter: true,\n        disableSortBy: true,\n      },\n      {\n        Header: \"CreatedAt\",\n        accessor: \"createdAt\",\n        disableGlobalFilter: true,\n      },\n      {\n        Header: \"UpdatedAt\",\n        accessor: \"updatedAt\",\n        disableGlobalFilter: true,\n        disableSortBy: true,\n      },\n    ],\n    []\n  );\n\n  const PhotoFormatter = (value) => (\n    <div className=\"products-list__img-wrap\">\n      <img height=\"70px\" width=\"50px\" src={baseUrl + \"/\" + value} alt=\"\" />\n    </div>\n  );\n\n  // const getImage = (img, alt) => <img src={`${baseUrl}${img}`} alt={alt} />;\n  let id = 0;\n  const data = [];\n  const rows = () => {\n    enquaries.forEach((e) => {\n      data.push({\n        id,\n        firstname: e.firstname,\n        lastname: e.lastname,\n        email: e.email,\n        contact: e.contact,\n        product: e.productDescription,\n        enquiry: e.enquiry,\n        image: PhotoFormatter(e.imageLink),\n        updatedAt: moment(e.updatedAt).format(\"DD-MM-YYYY\"),\n        createdAt: moment(e.createdAt).format(\"DD-MM-YYYY\"),\n      });\n      id++;\n    });\n  };\n\n  rows();\n  const reactTableData = { tableHeaderData: columns, tableRowsData: data };\n  return reactTableData;\n};\n\nexport default CreateTableData;\n","import { listEnquaryList } from \"../../utility/api\";\nimport { authGet } from \"../../utility/request\";\n\nexport const ENQUARY_LIST_START = \"ENQUARY_LIST_START\";\nexport const ENQUARY_LIST_SUCCESS = \"ENQUARY_LIST_SUCCESS\";\nexport const ENQUARY_LIST_FAIL = \"ENQUARY_LIST_FAIL\";\n\nconst enquaryListStart = () => {\n  return {\n    type: ENQUARY_LIST_START,\n  };\n};\n\nconst enquaryListSuccess = (data) => {\n  return {\n    type: ENQUARY_LIST_SUCCESS,\n    payload: data,\n  };\n};\n\nconst enquaryListFail = (data) => {\n  return {\n    type: ENQUARY_LIST_FAIL,\n    payload: data,\n  };\n};\n\nexport const fetchEnquaryList = (token) => async (dispatch) => {\n  dispatch(enquaryListStart());\n  try {\n    const response = await authGet(listEnquaryList, token);\n    if (response.data.success) {\n      dispatch(enquaryListSuccess(response.data.data));\n    } else {\n      dispatch(enquaryListFail(response.data.message));\n    }\n  } catch (err) {\n    dispatch(enquaryListFail(err.toString()));\n  }\n};\n","import React, { useEffect } from \"react\";\nimport { Col, Container, Row } from \"reactstrap\";\nimport DataReactTable from \"../../component/table/tableBase\";\nimport CreateTableData from \"./component/createData\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchEnquaryList } from \"../../redux/actions/enquary\";\n\nconst Enquary = () => {\n  const dispatch = useDispatch();\n  const {\n    user: { token },\n  } = useSelector((state) => state.user);\n  const { loading, error, enquaryList } = useSelector((state) => state.enquary);\n  const reactTableData = CreateTableData();\n  useEffect(() => {\n    if (!enquaryList) {\n      dispatch(fetchEnquaryList(token));\n    }\n  }, [dispatch, enquaryList, token]);\n  return (\n    <Container>\n      <Row>\n        <Col md={12}>\n          <h3 className=\"page-title\">Enquary</h3>\n          {/* <h3 className=\"page-subhead subhead\"></h3> */}\n        </Col>\n      </Row>\n      <Row>\n        {loading ? (\n          <p>loading...</p>\n        ) : error ? (\n          <p>{error}</p>\n        ) : (\n          <DataReactTable reactTableData={reactTableData} />\n        )}\n      </Row>\n    </Container>\n  );\n};\n\nexport default Enquary;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport { logout } from \"../../redux/actions/profile\";\n\nconst Logout = () => {\n  const dispatch = useDispatch();\n  dispatch(logout());\n  return <Redirect to=\"/\" />;\n};\n\nexport default Logout;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Layout from \"../Layout/index\";\nimport MainWrapper from \"./MainWrapper\";\nimport LogIn from \"../LogIn/index\";\nimport { useSelector } from \"react-redux\";\nimport Products from \"../../screens/products/products\";\nimport Categories from \"../../screens/category/categories\";\nimport AddCategory from \"../../screens/category/addCategory\";\n\nimport Orders from \"../../screens/orders/orders\";\nimport Vendors from \"../../screens/vendors/Vendors\";\nimport AddProduct from \"../../screens/addProduct\";\nimport Users from \"../../screens/users/users\";\nimport Enquary from \"../../screens/enquary/Enquary\";\nimport Logout from \"../../screens/logout/logout\";\n\nconst Pages = () => (\n  <Switch>\n    {/* <Route path=\"/pages/one\" component={ExamplePageOne} /> */}\n    {/* <Route path=\"/pages/two\" component={ExamplePageTwo} /> */}\n  </Switch>\n);\n\nconst wrappedRoutes = () => (\n  <div>\n    <Layout />\n    <div className=\"container__wrap\">\n      <Route path=\"/\" component={Pages} />\n      <Route path=\"/products/list\" component={Products} />\n      <Route path=\"/products/add\" component={AddProduct} />\n\n      <Route path=\"/categories/list\" component={Categories} />\n      <Route path=\"/categories/add\" component={AddCategory} />\n\n      <Route path=\"/orders\" component={Orders} />\n      <Route path=\"/vendors/list\" component={Vendors} />\n\n      <Route path=\"/users/list\" component={Users} />\n      <Route path=\"/enquary/list\" component={Enquary} />\n      <Route path=\"/logout\" component={Logout} />\n    </div>\n  </div>\n);\n\nconst Router = () => {\n  const { loggedIn } = useSelector((state) => state.user);\n  return (\n    <MainWrapper>\n      <main>\n        <Switch>\n          {!loggedIn ? (\n            <Route exact path=\"/\" component={LogIn} />\n          ) : (\n            <Route path=\"/\" component={wrappedRoutes} />\n          )}\n        </Switch>\n      </main>\n    </MainWrapper>\n  );\n};\n\nexport default Router;\n","import { handleActions } from 'redux-actions';\nimport {\n  changeThemeToDark,\n  changeThemeToLight,\n} from '../actions/themeActions';\n\nconst defaultState = {\n  className: 'theme-light',\n};\n\nexport default handleActions(\n  {\n    [changeThemeToDark]() {\n      return { className: 'theme-dark' };\n    },\n    [changeThemeToLight]() {\n      return { className: 'theme-light' };\n    },\n  },\n  defaultState,\n);\n","import { handleActions } from 'redux-actions';\nimport {\n  changeSidebarVisibility,\n  changeMobileSidebarVisibility,\n} from '../actions/sidebarActions';\n\nconst defaultState = {\n  show: false,\n  collapse: false,\n};\n\nexport default handleActions(\n  {\n    [changeSidebarVisibility](state) {\n      return { ...state, collapse: !state.collapse };\n    },\n    [changeMobileSidebarVisibility](state) {\n      return { ...state, show: !state.show };\n    },\n  },\n  defaultState,\n);\n","import { createAction } from 'redux-actions';\n\nexport const changeDirectionToLTR = createAction('CHANGE_DIRECTION_TO_LTR');\nexport const changeDirectionToRTL = createAction('CHANGE_DIRECTION_TO_RTL');\n","import { handleActions } from 'redux-actions';\nimport {\n  changeDirectionToLTR,\n  changeDirectionToRTL,\n} from '../actions/rtlActions';\n\nconst defaultState = {\n  direction: 'ltr',\n};\n\nexport default handleActions(\n  {\n    [changeDirectionToLTR]() {\n      return { direction: 'ltr' };\n    },\n    [changeDirectionToRTL]() {\n      return { direction: 'rtl' };\n    },\n  },\n  defaultState,\n);\n","export const updateObject = (state, newobj) => {\n  return {\n    ...state,\n    ...newobj,\n  };\n};\n","import { LOGIN, LOGOUT } from \"../actions/profile\";\nimport { updateObject } from \"./helper\";\n\n// let user = {};\n// let loggedIn = false;\n// if (localStorage.getItem(\"user\")) {\n//   user = await );\n//   loggedIn = true;\n// }\nconst init = {\n  user: JSON.parse(localStorage.getItem(\"user\")),\n  loggedIn: JSON.parse(localStorage.getItem(\"user\")) ? true : false,\n};\n\nconst reducer = (state = init, action) => {\n  switch (action.type) {\n    case LOGIN:\n      localStorage.setItem(\"user\", JSON.stringify(action.payload));\n      return { ...state, user: action.payload, loggedIn: true };\n\n    case LOGOUT:\n      localStorage.removeItem(\"user\");\n      return updateObject(state, {\n        user: null,\n        loggedIn: false,\n      });\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import {\n  LIST_CATEGORY_FAIL,\n  LIST_CATEGORY_START,\n  LIST_CATEGORY_SUCCESS,\n} from \"../actions/category\";\nimport { updateObject } from \"./helper\";\n\nconst init = {\n  loading: false,\n  addCategory: false,\n  listCategory: false,\n  error: null,\n  categories: [],\n};\n// category ---1\n//     childcategory ----2\n//          subcategory -----3\n\nconst listCategorySuccess = (state, action) => {\n  let newCategory = [];\n  action.payload.forEach((data) => {\n    newCategory.push({\n      _id: data._id,\n      title: data.name,\n      slug: data.slug,\n      image: data.image,\n      createdAt: data.createdAt,\n      updatedAt: data.updatedAt,\n      type: 1,\n    });\n    if (data.children)\n      data.children.forEach((e) => {\n        newCategory.push({\n          _id: e._id,\n          title: e.name,\n          slug: e.slug,\n          image: e.image,\n          createdAt: e.createdAt,\n          updatedAt: e.updatedAt,\n          mainCategory: data.name,\n\n          type: 2,\n        });\n        if (e.children)\n          e.children.forEach((f) => {\n            newCategory.push({\n              _id: f._id,\n              subCategory: e.name,\n              mainCategory: data.name,\n              title: f.name,\n              slug: f.slug,\n              image: f.image,\n              createdAt: f.createdAt,\n              updatedAt: f.updatedAt,\n              type: 3,\n            });\n          });\n      });\n  });\n  return updateObject(state, {\n    categories: newCategory,\n    loading: false,\n  });\n};\n\nconst reducer = (state = init, action) => {\n  switch (action.type) {\n    case LIST_CATEGORY_START:\n      return updateObject(state, { loading: true, listCategory: true });\n    case LIST_CATEGORY_FAIL:\n      return updateObject(state, { loading: false, error: action.payload });\n    case LIST_CATEGORY_SUCCESS:\n      return listCategorySuccess(state, action);\n    default:\n      return state;\n  }\n};\nexport default reducer;\n","import {\n  APPROVE_PRODUCT,\n  FETCH_PRODUCT_FAIL,\n  FETCH_PRODUCT_START,\n  FETCH_PRODUCT_SUCCESS,\n  SUSPEND_PRODUCT,\n} from \"../actions/product\";\nimport { updateObject } from \"./helper\";\n\nconst init = {\n  loading: false,\n  error: null,\n  listProduct: false,\n  products: [],\n};\n\nconst approveProduct = (state, action) => {\n  const newProducts = [...state.products];\n  const newProduct = newProducts.find((e) => e._id === action.payload);\n  if (action.type === SUSPEND_PRODUCT) {\n    newProduct.status = 2;\n  } else {\n    newProduct.status = 1;\n  }\n  return updateObject(state, { products: newProducts });\n};\n\nconst reducer = (state = init, action) => {\n  switch (action.type) {\n    case FETCH_PRODUCT_START:\n      return updateObject(state, { loading: true, listProduct: true });\n    case FETCH_PRODUCT_FAIL:\n      return updateObject(state, { loading: false, error: action.payload });\n    case FETCH_PRODUCT_SUCCESS:\n      return updateObject(state, { loading: false, products: action.payload });\n    case APPROVE_PRODUCT:\n      return approveProduct(state, action);\n    case SUSPEND_PRODUCT:\n      return approveProduct(state, action);\n\n    default:\n      return state;\n  }\n};\nexport default reducer;\n","import {\n  FETCH_ORDER_FAIL,\n  FETCH_ORDER_SATRT,\n  FETCH_ORDER_SUCCESS,\n} from \"../actions/order\";\nimport { updateObject } from \"./helper\";\n\nconst init = {\n  loading: false,\n  listOrder: false,\n  orders: [],\n  error: null,\n};\n\nconst reducer = (state = init, action) => {\n  switch (action.type) {\n    case FETCH_ORDER_SATRT:\n      return updateObject(state, { loading: true, listOrder: true });\n    case FETCH_ORDER_FAIL:\n      return updateObject(state, { loading: false, error: action.payload });\n    case FETCH_ORDER_SUCCESS:\n      return updateObject(state, { orders: action.payload, loading: false });\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import {\n  FETCH_VENDOR_FAIL,\n  FETCH_VENDOR_START,\n  FETCH_VENDOR_SUCCESS,\n} from \"../actions/vendors\";\nimport { updateObject } from \"./helper\";\n\nconst init = {\n  loading: false,\n  error: false,\n  vendors: [],\n  listVendor: false,\n};\n\nconst reducer = (state = init, action) => {\n  switch (action.type) {\n    case FETCH_VENDOR_START:\n      return updateObject(state, { loading: true, listVendor: true });\n    case FETCH_VENDOR_FAIL:\n      return updateObject(state, { loading: false, error: action.payload });\n    case FETCH_VENDOR_SUCCESS:\n      return updateObject(state, { loading: false, vendors: action.payload });\n    default:\n      return state;\n  }\n};\nexport default reducer;\n","import {\n  LIST_USERS_FAIL,\n  LIST_USERS_START,\n  LIST_USERS_SUCCESS,\n} from \"../actions/users\";\nimport { updateObject } from \"./helper\";\n\nconst init = {\n  loading: false,\n  error: null,\n  listUsers: false,\n  users: [],\n};\n\nconst reducer = (state = init, action) => {\n  switch (action.type) {\n    case LIST_USERS_START:\n      return updateObject(state, { loading: true, listUsers: true });\n    case LIST_USERS_SUCCESS:\n      return updateObject(state, { loading: false, users: action.payload });\n    case LIST_USERS_FAIL:\n      return updateObject(state, { loading: false, error: action.payload });\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import {\n  ENQUARY_LIST_FAIL,\n  ENQUARY_LIST_START,\n  ENQUARY_LIST_SUCCESS,\n} from \"../actions/enquary\";\nimport { updateObject } from \"./helper\";\n\nconst init = {\n  loading: false,\n  enquaries: [],\n  enquaryList: false,\n  error: false,\n};\n\nconst reducer = (state = init, action) => {\n  console.log(action);\n  switch (action.type) {\n    case ENQUARY_LIST_START:\n      return updateObject(state, { loading: true, enquaryList: true });\n    case ENQUARY_LIST_SUCCESS:\n      console.log(\"I am here\");\n      return updateObject(state, { loading: false, enquaries: action.payload });\n    case ENQUARY_LIST_FAIL:\n      return updateObject(state, {\n        loading: false,\n        error: action.payload,\n      });\n    default:\n      return state;\n  }\n};\nexport default reducer;\n","import { combineReducers, createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { reducer as reduxFormReducer } from \"redux-form\";\nimport {\n  sidebarReducer,\n  themeReducer,\n  rtlReducer,\n  profileReducer,\n  categoryReducer,\n  productReducer,\n  orderReducer,\n  vendorReducer,\n  usersReducer,\n  enquaryReducer,\n} from \"../../redux/reducers/index\";\nconst reducer = combineReducers({\n  form: reduxFormReducer, // mounted under \"form\",\n  theme: themeReducer,\n  sidebar: sidebarReducer,\n  rtl: rtlReducer,\n  user: profileReducer,\n  category: categoryReducer,\n  product: productReducer,\n  order: orderReducer,\n  vendor: vendorReducer,\n  users: usersReducer,\n  enquary: enquaryReducer,\n});\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nexport default store;\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\n\nconst ScrollToTop = ({ children, location }) => {\n  useEffect(() => {\n    if (location && location.pathname) {\n      window.scrollTo(0, 0);\n    }\n  }, [location]);\n  return children;\n};\n\nScrollToTop.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string,\n  }).isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nexport default withRouter(ScrollToTop);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert, Button } from 'reactstrap';\nimport InformationOutlineIcon from 'mdi-react/InformationOutlineIcon';\nimport ThumbUpOutlineIcon from 'mdi-react/ThumbUpOutlineIcon';\nimport CommentAlertOutlineIcon from 'mdi-react/CommentAlertOutlineIcon';\nimport CloseCircleOutlineIcon from 'mdi-react/CloseCircleOutlineIcon';\n\nconst AlertComponent = ({\n  color, className, icon, children,\n}) => {\n  const [visible, setVisible] = useState(true);\n\n  const onShow = () => {\n    setVisible(true);\n  };\n\n  const onDismiss = () => {\n    setVisible(false);\n  };\n\n  let Icon;\n\n  switch (color) {\n    case 'info':\n      Icon = <InformationOutlineIcon />;\n      break;\n    case 'success':\n      Icon = <ThumbUpOutlineIcon />;\n      break;\n    case 'warning':\n      Icon = <CommentAlertOutlineIcon />;\n      break;\n    case 'danger':\n      Icon = <CloseCircleOutlineIcon />;\n      break;\n    default:\n      console.log('Wrong color!');\n      break;\n  }\n\n  if (visible) {\n    return (\n      <Alert color={color} className={className} isOpen={visible}>\n        {icon && <div className=\"alert__icon\">{Icon}</div>}\n        <button className=\"close\" type=\"button\" onClick={onDismiss}>\n          <span className=\"lnr lnr-cross\" />\n        </button>\n        <div className=\"alert__content\">{children}</div>\n      </Alert>\n    );\n  }\n\n  return <Button onClick={onShow}>Show Alert</Button>;\n};\n\nexport default AlertComponent;\n\nAlertComponent.propTypes = {\n  color: PropTypes.string,\n  icon: PropTypes.bool,\n  className: PropTypes.string,\n  children: PropTypes.element.isRequired,\n};\n\nAlertComponent.defaultProps = {\n  color: '',\n  icon: false,\n  className: '',\n};\n","import { Card, CardBody } from \"reactstrap\";\nimport Alert from \"../../shared/Alert/Alert\";\nconst AlertTemplate = ({ options, message }) => (\n  <Card>\n    <CardBody>\n      {options.type === \"info\" && (\n        <Alert color=\"info\">\n          <p>\n            <span className=\"bold-text\">Information:</span> {message}\n          </p>\n        </Alert>\n      )}\n      {options.type === \"success\" && (\n        <Alert color=\"success\">\n          <p>\n            <span className=\"bold-text\">Congratulations!</span> {message}\n          </p>\n        </Alert>\n      )}\n      {options.type === \"warning\" && (\n        <Alert color=\"warning\">\n          <p>\n            <span className=\"bold-text\">Attention!</span>\n            {message}\n          </p>\n        </Alert>\n      )}\n      {options.type === \"danger\" && (\n        <Alert color=\"danger\">\n          <p>\n            <span className=\"bold-text\">Warning!</span>\n            {message}\n          </p>\n        </Alert>\n      )}\n    </CardBody>\n  </Card>\n);\n\nexport default AlertTemplate;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"../../scss/app.scss\";\nimport Router from \"./Router\";\nimport store from \"./store\";\nimport ScrollToTop from \"./ScrollToTop\";\nimport { Provider as AlertProvider } from \"react-alert\";\nimport {} from \"../../component/alert/alert\";\n\nconst App = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    window.addEventListener(\"load\", () => {\n      setIsLoading(false);\n      setTimeout(() => setIsLoaded(true), 500);\n    });\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <AlertProvider template={alert}>\n        <BrowserRouter>\n          <ScrollToTop>\n            <Fragment>\n              {!isLoaded && (\n                <div className={`load${isLoading ? \"\" : \" loaded\"}`}>\n                  <div className=\"load__icon-wrap\">\n                    <svg className=\"load__icon\">\n                      <path\n                        fill=\"#4ce1b6\"\n                        d=\"M12,4V2A10,10 0 0,0 2,12H4A8,8 0 0,1 12,4Z\"\n                      />\n                    </svg>\n                  </div>\n                </div>\n              )}\n              <div>\n                <Router />\n              </div>\n            </Fragment>\n          </ScrollToTop>\n        </BrowserRouter>\n      </AlertProvider>\n    </Provider>\n  );\n};\n\nexport default App;\n","/* eslint-disable no-console */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        // eslint-disable-next-line no-use-before-define\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        // eslint-disable-next-line no-use-before-define\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      // eslint-disable-next-line no-param-reassign\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}